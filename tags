!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-prefix	./Makefile	/^		git archive --prefix=net-tools-$(RELEASE)\/ HEAD | tar xf -$/;"	m
ACTOBJS	./lib/Makefile	/^ACTOBJS  = slip_ac.o ppp_ac.o activate.o$/;"	m
ADAPTIVE_activate	./lib/slip_ac.c	/^int ADAPTIVE_activate(int fd)$/;"	f
AFGROBJS	./lib/Makefile	/^AFGROBJS = inet_gr.o inet6_gr.o ipx_gr.o ddp_gr.o netrom_gr.o ax25_gr.o rose_gr.o getroute.o x25_gr.o$/;"	m
AFOBJS	./lib/Makefile	/^AFOBJS	 = unix.o inet.o inet6.o ax25.o ipx.o ddp.o ipx.o netrom.o af.o rose.o econet.o x25.o$/;"	m
AFSROBJS	./lib/Makefile	/^AFSROBJS = inet_sr.o inet6_sr.o netrom_sr.o ipx_sr.o setroute.o x25_sr.o$/;"	m
AFTRANS_CNT	./lib/net-support.h	156;"	d
AFTRANS_OPTS	./lib/net-support.h	142;"	d
AF_ECONET	./lib/net-support.h	244;"	d
AF_INET6	./lib/util-ank.c	33;"	d	file:
AF_ROSE	./lib/rose.c	43;"	d	file:
AF_ROSE	./lib/rose.c	50;"	d	file:
ALL_CATALOGS	./po/Makefile	/^ALL_CATALOGS = $(ALL_LANGS:%=%.mo)$/;"	m
ALL_LANGS	./man/Makefile	/^ALL_LANGS = $(filter-out Makefile,$(wildcard *))$/;"	m
ALL_LANGS	./po/Makefile	/^ALL_LANGS = $(ALL_POS:%.po=%)$/;"	m
ALL_POS	./po/Makefile	/^ALL_POS = $(wildcard *.po)$/;"	m
ARPHRD_ASH	./lib/ash.c	55;"	d	file:
ARPHRD_EUI64	./lib/eui64.c	45;"	d	file:
ARPHRD_HDLC	./lib/hdlclapb.c	41;"	d	file:
ARPHRD_HIPPI	./lib/hippi.c	41;"	d	file:
ARPHRD_IRDA	./lib/irda.c	53;"	d	file:
ARPHRD_LAPB	./lib/hdlclapb.c	46;"	d	file:
ARPHRD_SIT	./lib/sit.c	38;"	d	file:
ASH_ALEN	./lib/ash.c	25;"	d	file:
AX25_errmsg	./lib/ax25.c	/^static char AX25_errmsg[128];$/;"	v	file:
AX25_herror	./lib/ax25.c	/^static void AX25_herror(char *text)$/;"	f	file:
AX25_hinput	./lib/ax25.c	/^static int AX25_hinput(char *bufp, struct sockaddr *sap)$/;"	f	file:
AX25_input	./lib/ax25.c	/^static int AX25_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
AX25_print	./lib/ax25.c	/^static const char *AX25_print(const char *ptr)$/;"	f	file:
AX25_rprint	./lib/ax25_gr.c	/^int AX25_rprint(int options)$/;"	f
AX25_sprint	./lib/ax25.c	/^ AX25_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
BASEDIR	./Makefile	/^BASEDIR ?= $(DESTDIR)$/;"	m
CATALOGS	./po/Makefile	/^CATALOGS = $(LANGS:%=%.mo)$/;"	m
CC	./Makefile	/^CC	= gcc$/;"	m
CFLAGS	./Makefile	/^CFLAGS ?= -O2 -g$/;"	m
CSLIP6_activate	./lib/slip_ac.c	/^int CSLIP6_activate(int fd)$/;"	f
CSLIP_activate	./lib/slip_ac.c	/^int CSLIP_activate(int fd)$/;"	f
DDP_rprint	./lib/ddp_gr.c	/^int DDP_rprint(int options)$/;"	f
DEF_PROTO	./slattach.c	75;"	d	file:
DELADDR	./ipmaddr.c	46;"	d	file:
DFLT_AF	./arp.c	77;"	d	file:
DFLT_AF	./ifconfig.c	28;"	d	file:
DFLT_AF	./netstat.c	135;"	d	file:
DFLT_AF	./route.c	65;"	d	file:
DFLT_HW	./arp.c	78;"	d	file:
DFLT_HW	./rarp.c	36;"	d	file:
DNLIB	./Makefile	/^DNLIB = -ldnet$/;"	m
EINTERN	./lib/net-support.h	158;"	d
ENOSUPP	./lib/net-support.h	161;"	d
ESYSNOT	./lib/net-support.h	166;"	d
EUI64_ALEN	./lib/eui64.c	42;"	d	file:
EXTERN	./lib/x25.c	36;"	d	file:
EXTERN	./lib/x25_gr.c	41;"	d	file:
EXTERN	./lib/x25_sr.c	36;"	d	file:
E_INTERN	./lib/net-support.h	174;"	d
E_IOCTL	./netstat.c	144;"	d	file:
E_LOOKUP	./lib/net-support.h	170;"	d
E_NOSUPP	./lib/net-support.h	175;"	d
E_NOTFOUND	./lib/net-support.h	168;"	d
E_OPTERR	./lib/net-support.h	173;"	d
E_READ	./netstat.c	143;"	d	file:
E_SOCK	./lib/net-support.h	169;"	d
E_USAGE	./lib/net-support.h	172;"	d
E_VERSION	./lib/net-support.h	171;"	d
FEATURE_ARP	./arp.c	80;"	d	file:
FEATURE_NETSTAT	./netstat.c	137;"	d	file:
FEATURE_ROUTE	./route.c	67;"	d	file:
FLAG_CACHE	./lib/net-support.h	101;"	d
FLAG_EXT	./lib/net-support.h	95;"	d
FLAG_FIB	./lib/net-support.h	102;"	d
FLAG_NUM	./lib/net-support.h	99;"	d
FLAG_NUM_HOST	./lib/net-support.h	96;"	d
FLAG_NUM_PORT	./lib/net-support.h	97;"	d
FLAG_NUM_USER	./lib/net-support.h	98;"	d
FLAG_SYM	./lib/net-support.h	100;"	d
FLAG_VERBOSE	./lib/net-support.h	103;"	d
Features	./lib/net-features.h	/^static char *Features =$/;"	v
GRE_CSUM	./iptunnel.c	47;"	d	file:
GRE_CSUM	./iptunnel.c	48;"	d	file:
GRE_FLAGS	./iptunnel.c	59;"	d	file:
GRE_FLAGS	./iptunnel.c	60;"	d	file:
GRE_KEY	./iptunnel.c	51;"	d	file:
GRE_KEY	./iptunnel.c	52;"	d	file:
GRE_REC	./iptunnel.c	57;"	d	file:
GRE_REC	./iptunnel.c	58;"	d	file:
GRE_ROUTING	./iptunnel.c	49;"	d	file:
GRE_ROUTING	./iptunnel.c	50;"	d	file:
GRE_SEQ	./iptunnel.c	53;"	d	file:
GRE_SEQ	./iptunnel.c	54;"	d	file:
GRE_STRICT	./iptunnel.c	55;"	d	file:
GRE_STRICT	./iptunnel.c	56;"	d	file:
GRE_VERSION	./iptunnel.c	61;"	d	file:
GRE_VERSION	./iptunnel.c	62;"	d	file:
HAS_INODE	./netstat.c	1537;"	d	file:
HAVE_AFASH	./config.h	40;"	d
HAVE_AFATALK	./config.h	33;"	d
HAVE_AFAX25	./config.h	34;"	d
HAVE_AFBLUETOOTH	./config.h	41;"	d
HAVE_AFDECnet	./config.h	39;"	d
HAVE_AFECONET	./config.h	38;"	d
HAVE_AFINET	./config.h	30;"	d
HAVE_AFINET6	./config.h	31;"	d
HAVE_AFIPX	./config.h	32;"	d
HAVE_AFNETROM	./config.h	35;"	d
HAVE_AFROSE	./config.h	36;"	d
HAVE_AFUNIX	./config.h	29;"	d
HAVE_AFX25	./config.h	37;"	d
HAVE_DYNAMIC	./include/interface.h	96;"	d
HAVE_FW_MASQUERADE	./config.h	75;"	d
HAVE_HWARC	./config.h	49;"	d
HAVE_HWASH	./config.h	63;"	d
HAVE_HWAX25	./config.h	55;"	d
HAVE_HWEC	./config.h	66;"	d
HAVE_HWETHER	./config.h	48;"	d
HAVE_HWEUI64	./config.h	67;"	d
HAVE_HWFDDI	./config.h	61;"	d
HAVE_HWFR	./config.h	59;"	d
HAVE_HWHDLCLAPB	./config.h	64;"	d
HAVE_HWHIPPI	./config.h	62;"	d
HAVE_HWIB	./config.h	68;"	d
HAVE_HWIRDA	./config.h	65;"	d
HAVE_HWNETROM	./config.h	57;"	d
HAVE_HWPPP	./config.h	51;"	d
HAVE_HWROSE	./config.h	56;"	d
HAVE_HWSIT	./config.h	60;"	d
HAVE_HWSLIP	./config.h	50;"	d
HAVE_HWSTRIP	./config.h	53;"	d
HAVE_HWTR	./config.h	54;"	d
HAVE_HWTUNNEL	./config.h	52;"	d
HAVE_HWX25	./config.h	58;"	d
HAVE_IP_TOOLS	./config.h	76;"	d
HAVE_MII	./config.h	77;"	d
HAVE_NEW_ADDRT	./lib/net-features.h	35;"	d
HAVE_RTF_IRTT	./lib/net-features.h	39;"	d
HAVE_RTF_REJECT	./lib/net-features.h	43;"	d
HAVE_SELINUX	./config.h	78;"	d
HAVE_TXQUEUELEN	./include/interface.h	94;"	d
HIPPI_ALEN	./lib/hippi.c	39;"	d	file:
HWOBJS	./lib/Makefile	/^HWOBJS	 = hw.o loopback.o slip.o ether.o ax25.o ppp.o arcnet.o tr.o tunnel.o frame.o sit.o rose.o ash.o fddi.o hippi.o hdlclapb.o strip.o irda.o ec_hw.o x25.o eui64.o ib.o$/;"	m
I18N	./config.h	22;"	d
IFF_DYNAMIC	./include/interface.h	98;"	d
IN6_IS_ADDR_UNSPECIFIED	./lib/inet6.c	81;"	d	file:
INET6_getsock	./lib/inet6.c	/^static int INET6_getsock(char *bufp, struct sockaddr *sap)$/;"	f	file:
INET6_input	./lib/inet6.c	/^static int INET6_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
INET6_print	./lib/inet6.c	/^static const char *INET6_print(const char *ptr)$/;"	f	file:
INET6_reserror	./lib/inet6.c	/^static void INET6_reserror(char *text)$/;"	f	file:
INET6_resolve	./lib/inet6.c	/^static int INET6_resolve(char *name, struct sockaddr_in6 *sin6)$/;"	f	file:
INET6_rinput	./lib/inet6_sr.c	/^int INET6_rinput(int action, int options, char **args)$/;"	f
INET6_rprint	./lib/inet6_gr.c	/^int INET6_rprint(int options)$/;"	f
INET6_rresolve	./lib/inet6.c	/^static int INET6_rresolve(char *name, size_t namelen,$/;"	f	file:
INET6_setroute	./lib/inet6_sr.c	/^static int INET6_setroute(int action, int options, char **args)$/;"	f	file:
INET6_sprint	./lib/inet6.c	/^static const char *INET6_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
INET_getnetmask	./lib/inet.c	/^static int INET_getnetmask(char *adr, struct sockaddr *m, char *name)$/;"	f	file:
INET_getsock	./lib/inet.c	/^static int INET_getsock(char *bufp, struct sockaddr *sap)$/;"	f	file:
INET_input	./lib/inet.c	/^static int INET_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
INET_nn	./lib/inet.c	/^static struct addr *INET_nn = NULL;	\/* addr-to-name cache           *\/$/;"	v	typeref:struct:addr	file:
INET_print	./lib/inet.c	/^static const char *INET_print(const char *ptr)$/;"	f	file:
INET_reserror	./lib/inet.c	/^static void INET_reserror(char *text)$/;"	f	file:
INET_resolve	./lib/inet.c	/^static int INET_resolve(char *name, struct sockaddr_in *sin, int hostfirst)$/;"	f	file:
INET_rinput	./lib/inet_sr.c	/^int INET_rinput(int action, int options, char **args)$/;"	f
INET_rprint	./lib/inet_gr.c	/^int INET_rprint(int options)$/;"	f
INET_rresolve	./lib/inet.c	/^static int INET_rresolve(char *name, size_t len, struct sockaddr_in *sin,$/;"	f	file:
INET_setroute	./lib/inet_sr.c	/^static int INET_setroute(int action, int options, char **args)$/;"	f	file:
INET_sprint	./lib/inet.c	/^static const char *INET_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
INET_sprintmask	./lib/inet.c	/^char *INET_sprintmask(struct sockaddr *sap, int numeric,$/;"	f
INFO_GUTS	./netstat.c	227;"	d	file:
INFO_GUTS1	./netstat.c	178;"	d	file:
INFO_GUTS2	./netstat.c	198;"	d	file:
INFO_GUTS2	./netstat.c	209;"	d	file:
INFO_GUTS3	./netstat.c	212;"	d	file:
INFO_GUTS6	./netstat.c	215;"	d	file:
INSTALL	./man/Makefile	/^INSTALL=install$/;"	m
INSTALL	./po/Makefile	/^INSTALL=install -c$/;"	m
INSTALLNLSDIR	./po/Makefile	/^INSTALLNLSDIR=${BASEDIR}\/usr\/share\/locale$/;"	m
INSTALL_DATA	./po/Makefile	/^INSTALL_DATA= ${INSTALL} -m 644$/;"	m
INSTALL_PROGRAM	./po/Makefile	/^INSTALL_PROGRAM= ${INSTALL}$/;"	m
IPPROTO_AH	./include/util-ank.h	16;"	d
IPPROTO_ESP	./include/util-ank.h	13;"	d
IPPROTO_GRE	./iptunnel.c	66;"	d	file:
IPV6_ADDR_ANY	./lib/interface.c	70;"	d	file:
IPV6_ADDR_ANYCAST	./lib/interface.c	74;"	d	file:
IPV6_ADDR_COMPATv4	./lib/interface.c	80;"	d	file:
IPV6_ADDR_LINKLOCAL	./lib/interface.c	77;"	d	file:
IPV6_ADDR_LOOPBACK	./lib/interface.c	76;"	d	file:
IPV6_ADDR_MAPPED	./lib/interface.c	84;"	d	file:
IPV6_ADDR_MULTICAST	./lib/interface.c	73;"	d	file:
IPV6_ADDR_RESERVED	./lib/interface.c	85;"	d	file:
IPV6_ADDR_SCOPE_MASK	./lib/interface.c	82;"	d	file:
IPV6_ADDR_SITELOCAL	./lib/interface.c	78;"	d	file:
IPV6_ADDR_UNICAST	./lib/interface.c	72;"	d	file:
IPX_FRAME_8022	./include/ipx.h	25;"	d
IPX_FRAME_8023	./include/ipx.h	27;"	d
IPX_FRAME_ETHERII	./include/ipx.h	26;"	d
IPX_FRAME_NONE	./include/ipx.h	23;"	d
IPX_FRAME_SNAP	./include/ipx.h	24;"	d
IPX_FRAME_TR_8022	./include/ipx.h	28;"	d
IPX_MTU	./include/ipx.h	8;"	d
IPX_NODE_LEN	./include/ipx.h	7;"	d
IPX_getsock	./lib/ipx.c	/^static int IPX_getsock(char *bufp, struct sockaddr *sap)$/;"	f	file:
IPX_input	./lib/ipx.c	/^static int IPX_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
IPX_print	./lib/ipx.c	/^static const char *IPX_print(const char *ptr)$/;"	f	file:
IPX_rinput	./lib/ipx_sr.c	/^int IPX_rinput(int action, int ext, char **args)$/;"	f
IPX_rprint	./lib/ipx_gr.c	/^int IPX_rprint(int options)$/;"	f
IPX_sprint	./lib/ipx.c	/^static const char *IPX_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
IP_DF	./iptunnel.c	211;"	d	file:
I_STATIC	./statistics.c	55;"	d	file:
I_TITLE	./statistics.c	56;"	d	file:
Icmp6tab	./statistics.c	/^struct entry Icmp6tab[] =$/;"	v	typeref:struct:entry
Icmptab	./statistics.c	/^struct entry Icmptab[] =$/;"	v	typeref:struct:entry
Ip6tab	./statistics.c	/^struct entry Ip6tab[] =$/;"	v	typeref:struct:entry
Iptab	./statistics.c	/^struct entry Iptab[] =$/;"	v	typeref:struct:entry
KRELEASE	./lib/util.h	11;"	d
LANGS	./man/Makefile	/^LANGS = $(ALL_LANGS)$/;"	m
LANGS	./man/Makefile	/^LANGS = $(sort $(filter $(LINGUAS),$(ALL_LANGS)) en_US)$/;"	m
LANGS	./man/Makefile	/^LANGS = en_US$/;"	m
LANGS	./po/Makefile	/^LANGS = $(ALL_LANGS)$/;"	m
LANGS	./po/Makefile	/^LANGS = $(filter $(LINGUAS),$(ALL_LANGS))$/;"	m
LANGS	./po/Makefile	/^LANGS =$/;"	m
LD	./Makefile	/^LD	= $(CC)$/;"	m
LINE_MAX	./netstat.c	271;"	d	file:
LPA_ABILITY_MASK	./mii-tool.c	62;"	d	file:
MAINTAINER	./Makefile	/^MAINTAINER = net-tools-devel@lists.sourceforge.net$/;"	m
MAX_ETH	./mii-tool.c	61;"	d	file:
MODE_DELETE	./rarp.c	190;"	d	file:
MODE_DISPLAY	./rarp.c	189;"	d	file:
MODE_ETHERS	./rarp.c	192;"	d	file:
MODE_SET	./rarp.c	191;"	d	file:
MaxState	./statistics.c	/^    MaxState$/;"	e	enum:State	file:
NETROM_herror	./lib/netrom.c	/^static void NETROM_herror(char *text)$/;"	f	file:
NETROM_hinput	./lib/netrom.c	/^static int NETROM_hinput(char *bufp, struct sockaddr *sap)$/;"	f	file:
NETROM_input	./lib/netrom.c	/^static int NETROM_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
NETROM_print	./lib/netrom.c	/^static const char *NETROM_print(const char *ptr)$/;"	f	file:
NETROM_rinput	./lib/netrom_sr.c	/^int NETROM_rinput(int action, int ext, char **args)$/;"	f
NETROM_rprint	./lib/netrom_gr.c	/^int NETROM_rprint(int options)$/;"	f
NETROM_sprint	./lib/netrom.c	/^static const char *NETROM_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
NET_LIB	./Makefile	/^NET_LIB = $(NET_LIB_PATH)\/lib$(NET_LIB_NAME).a$/;"	m
NET_LIB_NAME	./Makefile	/^NET_LIB_NAME = net-tools$/;"	m
NET_LIB_NAME	./lib/Makefile	/^NET_LIB_NAME = net-tools$/;"	m
NET_LIB_PATH	./Makefile	/^NET_LIB_PATH = lib$/;"	m
NEWADDR	./ipmaddr.c	45;"	d	file:
NEXT_ARG	./include/util-ank.h	23;"	d
NLIB	./Makefile	/^NLIB	= -l$(NET_LIB_NAME)$/;"	m
NLSPACKAGE	./po/Makefile	/^NLSPACKAGE = net-tools$/;"	m
NMEDIA	./mii-tool.c	171;"	d	file:
NMII	./mii-tool.c	94;"	d	file:
NTF_02	./lib/inet6_gr.c	51;"	d	file:
NTF_04	./lib/inet6_gr.c	52;"	d	file:
NTF_PROXY	./lib/inet6_gr.c	49;"	d	file:
NTF_ROUTER	./lib/inet6_gr.c	50;"	d	file:
NUD_DELAY	./lib/inet6_gr.c	41;"	d	file:
NUD_FAILED	./lib/inet6_gr.c	43;"	d	file:
NUD_INCOMPLETE	./lib/inet6_gr.c	38;"	d	file:
NUD_NOARP	./lib/inet6_gr.c	45;"	d	file:
NUD_NONE	./lib/inet6_gr.c	47;"	d	file:
NUD_PERMANENT	./lib/inet6_gr.c	46;"	d	file:
NUD_PROBE	./lib/inet6_gr.c	42;"	d	file:
NUD_REACHABLE	./lib/inet6_gr.c	39;"	d	file:
NUD_STALE	./lib/inet6_gr.c	40;"	d	file:
N_	./intl.h	11;"	d
N_	./intl.h	8;"	d
OBJS	./lib/Makefile	/^OBJS	= $(sort $(VARIA) $(AFOBJS) $(HWOBJS) \\$/;"	m
PATH_CMDLINE	./netstat.c	278;"	d	file:
PATH_CMDLINEl	./netstat.c	279;"	d	file:
PATH_FD_SUFF	./netstat.c	275;"	d	file:
PATH_FD_SUFFl	./netstat.c	276;"	d	file:
PATH_PROC	./netstat.c	274;"	d	file:
PATH_PROC_X_FD	./netstat.c	277;"	d	file:
PF_ROSE	./lib/rose.c	46;"	d	file:
PF_ROSE	./lib/rose.c	47;"	d	file:
PKG_CONFIG	./Makefile	/^PKG_CONFIG ?= pkg-config$/;"	m
POTFILES	./po/Makefile	/^POTFILES=..\/arp.c ..\/hostname.c ..\/ifconfig.c ..\/netstat.c ..\/rarp.c \\$/;"	m
PPP_activate	./lib/ppp_ac.c	/^int PPP_activate(int fd)$/;"	f
PRG_HASHIT	./netstat.c	253;"	d	file:
PRG_HASH_SIZE	./netstat.c	242;"	d	file:
PRG_INODE	./netstat.c	263;"	d	file:
PRG_LOCAL_ADDRESS	./netstat.c	262;"	d	file:
PRG_SOCKET_PFX	./netstat.c	264;"	d	file:
PRG_SOCKET_PFX2	./netstat.c	266;"	d	file:
PRG_SOCKET_PFX2l	./netstat.c	267;"	d	file:
PRG_SOCKET_PFXl	./netstat.c	265;"	d	file:
PROGNAME_BANNER	./netstat.c	255;"	d	file:
PROGNAME_WIDTH	./netstat.c	110;"	d	file:
PROGNAME_WIDTH1	./netstat.c	235;"	d	file:
PROGNAME_WIDTH2	./netstat.c	236;"	d	file:
PROGNAME_WIDTHs	./netstat.c	234;"	d	file:
PROGS	./Makefile	/^PROGS	:= ifconfig hostname arp netstat route rarp slattach plipconfig nameif$/;"	m
RELEASE	./Makefile	/^RELEASE	   = 2.10-alpha$/;"	m
RELEASE	./version.h	1;"	d
RESLIB	./Makefile	/^RESLIB = # -L\/usr\/inet6\/lib -linet6$/;"	m
ROSE_errmsg	./lib/rose.c	/^static char ROSE_errmsg[128];$/;"	v	file:
ROSE_herror	./lib/rose.c	/^static void ROSE_herror(char *text)$/;"	f	file:
ROSE_hinput	./lib/rose.c	/^static int ROSE_hinput(char *bufp, struct sockaddr *sap)$/;"	f	file:
ROSE_input	./lib/rose.c	/^static int ROSE_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
ROSE_print	./lib/rose.c	/^ ROSE_print(const char *ptr)$/;"	f	file:
ROSE_rprint	./lib/rose_gr.c	/^int ROSE_rprint(int options)$/;"	f
ROSE_sprint	./lib/rose.c	/^ ROSE_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
RTACTION_ADD	./lib/net-support.h	89;"	d
RTACTION_DEL	./lib/net-support.h	90;"	d
RTACTION_FLUSH	./lib/net-support.h	92;"	d
RTACTION_HELP	./lib/net-support.h	91;"	d
RTACTION_SHOW	./lib/net-support.h	93;"	d
RTCF_BROADCAST	./lib/net-support.h	204;"	d
RTCF_DEAD	./lib/net-support.h	191;"	d
RTCF_DIRECTDST	./lib/net-support.h	195;"	d
RTCF_DIRECTSRC	./lib/net-support.h	202;"	d
RTCF_DNAT	./lib/net-support.h	203;"	d
RTCF_DOREDIRECT	./lib/net-support.h	201;"	d
RTCF_FAST	./lib/net-support.h	198;"	d
RTCF_LOCAL	./lib/net-support.h	207;"	d
RTCF_MASQ	./lib/net-support.h	199;"	d
RTCF_MULTICAST	./lib/net-support.h	205;"	d
RTCF_NOTIFY	./lib/net-support.h	194;"	d
RTCF_ONLINK	./lib/net-support.h	192;"	d
RTCF_REDIRECTED	./lib/net-support.h	196;"	d
RTCF_REJECT	./lib/net-support.h	206;"	d
RTCF_SNAT	./lib/net-support.h	200;"	d
RTCF_TPROXY	./lib/net-support.h	197;"	d
RTF_ADDRCONF	./lib/net-support.h	215;"	d
RTF_ALLONLINK	./lib/net-support.h	213;"	d
RTF_CACHE	./lib/net-support.h	219;"	d
RTF_DEFAULT	./lib/net-support.h	211;"	d
RTF_DYNAMIC	./lib/net-support.h	229;"	d
RTF_EXPIRES	./lib/net-support.h	218;"	d
RTF_FLOW	./lib/net-support.h	220;"	d
RTF_GATEWAY	./lib/net-support.h	226;"	d
RTF_HOST	./lib/net-support.h	227;"	d
RTF_IRTT	./lib/net-support.h	236;"	d
RTF_LOCAL	./lib/net-support.h	222;"	d
RTF_MODIFIED	./lib/net-support.h	230;"	d
RTF_MSS	./lib/net-support.h	233;"	d
RTF_MTU	./lib/net-support.h	231;"	d
RTF_NONEXTHOP	./lib/net-support.h	217;"	d
RTF_NOTCACHED	./lib/net-support.h	240;"	d
RTF_POLICY	./lib/net-support.h	221;"	d
RTF_REINSTATE	./lib/net-support.h	228;"	d
RTF_REJECT	./lib/net-support.h	237;"	d
RTF_UP	./lib/net-support.h	225;"	d
RTF_WINDOW	./lib/net-support.h	235;"	d
RTNH_F_DEAD	./lib/net-support.h	186;"	d
RTNH_F_ONLINK	./lib/net-support.h	188;"	d
RTNH_F_PERVASIVE	./lib/net-support.h	187;"	d
Release	./arp.c	/^static char *Release = RELEASE;$/;"	v	file:
Release	./hostname.c	/^static char *Release = RELEASE;$/;"	v	file:
Release	./ifconfig.c	/^static char *Release = RELEASE;$/;"	v	file:
Release	./ipmaddr.c	/^static char *Release = RELEASE, *Signature = "Alexey Kuznetsov";$/;"	v	file:
Release	./iptunnel.c	/^static char *Release = RELEASE, *Signature = "Alexey Kuznetsov";$/;"	v	file:
Release	./mii-tool.c	/^static char *Release = RELEASE, *Signature = "David Hinds based on Donald Becker's mii-diag";$/;"	v	file:
Release	./netstat.c	/^static char *Release = RELEASE, *Signature = "Fred Baumgarten, Alan Cox, Bernd Eckenfels, Phil Blundell, Tuan Hoang, Brian Micek and others";$/;"	v	file:
Release	./plipconfig.c	/^static char *Release = RELEASE, *Signature = "John Paul Morrison, Alan Cox et al.";$/;"	v	file:
Release	./rarp.c	/^static char *Release = RELEASE;$/;"	v	file:
Release	./route.c	/^static char *Release = RELEASE;$/;"	v	file:
Release	./slattach.c	/^static char *Release = RELEASE, *Signature = "Fred N. van Kempen et al.";$/;"	v	file:
SELIB	./Makefile	/^SELIB = $(SE_PC_LIBS)$/;"	m
SELINUX_BANNER	./netstat.c	256;"	d	file:
SELINUX_WIDTH	./netstat.c	111;"	d	file:
SELINUX_WIDTH1	./netstat.c	239;"	d	file:
SELINUX_WIDTH2	./netstat.c	240;"	d	file:
SELINUX_WIDTHs	./netstat.c	238;"	d	file:
SETDOMAIN	./hostname.c	70;"	d	file:
SETHOST	./hostname.c	69;"	d	file:
SETNODE	./hostname.c	71;"	d	file:
SE_PC_CFLAGS	./Makefile	/^SE_PC_CFLAGS := $(shell $(PKG_CONFIG) --cflags libselinux)$/;"	m
SE_PC_LIBS	./Makefile	/^SE_PC_LIBS := $(shell $(PKG_CONFIG) --libs libselinux || echo -lselinux)$/;"	m
SIOCGIFTXQLEN	./include/interface.h	86;"	d
SIOCGPARAMS	./mii-diag.c	105;"	d	file:
SIOCSIFTXQLEN	./include/interface.h	85;"	d
SIOCSPARAMS	./mii-diag.c	106;"	d	file:
SLIP6_activate	./lib/slip_ac.c	/^int SLIP6_activate(int fd)$/;"	f
SLIP_activate	./lib/slip_ac.c	/^int SLIP_activate(int fd)$/;"	f
SLIP_set_disc	./lib/slip_ac.c	/^static int SLIP_set_disc(int fd, int disc)$/;"	f	file:
SLIP_set_encap	./lib/slip_ac.c	/^static int SLIP_set_encap(int fd, int encap)$/;"	f	file:
SONAME	./lib/Makefile	/^SONAME=libnet-tools.so.0$/;"	m
SO_ACCEPTCON	./netstat.c	131;"	d	file:
SO_NOSPACE	./netstat.c	133;"	d	file:
SO_WAITDATA	./netstat.c	132;"	d	file:
SPRINT_BSIZE	./include/util-ank.h	19;"	d
SPRINT_BUF	./include/util-ank.h	20;"	d
SS_CONNECTED	./netstat.c	/^    SS_CONNECTED,		\/* connected to socket          *\/$/;"	e	enum:__anon6	file:
SS_CONNECTING	./netstat.c	/^    SS_CONNECTING,		\/* in process of connecting     *\/$/;"	e	enum:__anon6	file:
SS_DISCONNECTING	./netstat.c	/^    SS_DISCONNECTING		\/* in process of disconnecting  *\/$/;"	e	enum:__anon6	file:
SS_FREE	./netstat.c	/^    SS_FREE = 0,		\/* not allocated                *\/$/;"	e	enum:__anon6	file:
SS_UNCONNECTED	./netstat.c	/^    SS_UNCONNECTED,		\/* unconnected to any socket    *\/$/;"	e	enum:__anon6	file:
SUBDIRS	./Makefile	/^SUBDIRS	= man\/ $(NET_LIB_PATH)\/$/;"	m
Sctptab	./statistics.c	/^struct entry Sctptab[] =$/;"	v	typeref:struct:entry
Signature	./ipmaddr.c	/^static char *Release = RELEASE, *Signature = "Alexey Kuznetsov";$/;"	v	file:
Signature	./iptunnel.c	/^static char *Release = RELEASE, *Signature = "Alexey Kuznetsov";$/;"	v	file:
Signature	./mii-tool.c	/^static char *Release = RELEASE, *Signature = "David Hinds based on Donald Becker's mii-diag";$/;"	v	file:
Signature	./netstat.c	/^static char *Release = RELEASE, *Signature = "Fred Baumgarten, Alan Cox, Bernd Eckenfels, Phil Blundell, Tuan Hoang, Brian Micek and others";$/;"	v	file:
Signature	./plipconfig.c	/^static char *Release = RELEASE, *Signature = "John Paul Morrison, Alan Cox et al.";$/;"	v	file:
Signature	./slattach.c	/^static char *Release = RELEASE, *Signature = "Fred N. van Kempen et al.";$/;"	v	file:
State	./statistics.c	/^enum State {$/;"	g	file:
TCP_CLOSE	./netstat.c	/^    TCP_CLOSE,$/;"	e	enum:__anon7	file:
TCP_CLOSE_WAIT	./netstat.c	/^    TCP_CLOSE_WAIT,$/;"	e	enum:__anon7	file:
TCP_CLOSING	./netstat.c	/^    TCP_CLOSING			\/* now a valid state *\/$/;"	e	enum:__anon7	file:
TCP_ESTABLISHED	./netstat.c	/^    TCP_ESTABLISHED = 1,$/;"	e	enum:__anon7	file:
TCP_FIN_WAIT1	./netstat.c	/^    TCP_FIN_WAIT1,$/;"	e	enum:__anon7	file:
TCP_FIN_WAIT2	./netstat.c	/^    TCP_FIN_WAIT2,$/;"	e	enum:__anon7	file:
TCP_HASH_SIZE	./netstat.c	507;"	d	file:
TCP_LAST_ACK	./netstat.c	/^    TCP_LAST_ACK,$/;"	e	enum:__anon7	file:
TCP_LISTEN	./netstat.c	/^    TCP_LISTEN,$/;"	e	enum:__anon7	file:
TCP_NODE_HASH_STRING	./netstat.c	525;"	d	file:
TCP_SYN_RECV	./netstat.c	/^    TCP_SYN_RECV,$/;"	e	enum:__anon7	file:
TCP_SYN_SENT	./netstat.c	/^    TCP_SYN_SENT,$/;"	e	enum:__anon7	file:
TCP_TIME_WAIT	./netstat.c	/^    TCP_TIME_WAIT,$/;"	e	enum:__anon7	file:
TOPDIR	./Makefile	/^TOPDIR   = ..$/;"	m
TOPDIR	./Makefile	/^TOPDIR  := $(shell if [ "$$PWD" != "" ]; then echo $$PWD; else pwd; fi)$/;"	m
TOPDIR	./lib/Makefile	/^TOPDIR=..$/;"	m
TUPDATE	./po/Makefile	/^TUPDATE = msgmerge$/;"	m
Tcpexttab	./statistics.c	/^struct entry Tcpexttab[] =$/;"	v	typeref:struct:entry
Tcptab	./statistics.c	/^struct entry Tcptab[] =$/;"	v	typeref:struct:entry
UFWARN	./statistics.c	19;"	d	file:
UFWARN	./statistics.c	21;"	d	file:
UNIX_print	./lib/unix.c	/^static const char *UNIX_print(const char *ptr)$/;"	f	file:
UNIX_sprint	./lib/unix.c	/^static const char *UNIX_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
UNSPEC_print	./lib/unix.c	/^static const char *UNSPEC_print(const char *ptr)$/;"	f	file:
UNSPEC_sprint	./lib/unix.c	/^static const char *UNSPEC_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
Udp6tab	./statistics.c	/^struct entry Udp6tab[] =$/;"	v	typeref:struct:entry
Udptab	./statistics.c	/^struct entry Udptab[] =$/;"	v	typeref:struct:entry
VARIA	./lib/Makefile	/^VARIA	 = getargs.o masq_info.o proc.o util.o nstrcmp.o interface.o sockets.o$/;"	m
X25_ADDR_LEN	./lib/x25.c	50;"	d	file:
X25_ADDR_LEN	./lib/x25_gr.c	49;"	d	file:
X25_errmsg	./lib/x25.c	/^static char X25_errmsg[128];$/;"	v	file:
X25_herror	./lib/x25.c	/^X25_herror(char *text)$/;"	f	file:
X25_hinput	./lib/x25.c	/^X25_hinput(char *bufp, struct sockaddr *sap)$/;"	f	file:
X25_input	./lib/x25.c	/^X25_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
X25_print	./lib/x25.c	/^X25_print(const char *ptr)$/;"	f	file:
X25_rinput	./lib/x25_sr.c	/^int X25_rinput(int action, int options, char **args)$/;"	f
X25_rprint	./lib/x25_gr.c	/^int X25_rprint(int options)$/;"	f
X25_setroute	./lib/x25_sr.c	/^static int X25_setroute(int action, int options, char **args)$/;"	f	file:
X25_sprint	./lib/x25.c	/^X25_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
_	./intl.h	10;"	d
_	./intl.h	7;"	d
_DEBUG	./lib/arcnet.c	47;"	d	file:
_DEBUG	./lib/arcnet.c	49;"	d	file:
_DEBUG	./lib/ax25.c	80;"	d	file:
_DEBUG	./lib/ax25.c	82;"	d	file:
_DEBUG	./lib/ether.c	50;"	d	file:
_DEBUG	./lib/ether.c	52;"	d	file:
_DEBUG	./lib/eui64.c	64;"	d	file:
_DEBUG	./lib/eui64.c	66;"	d	file:
_DEBUG	./lib/fddi.c	61;"	d	file:
_DEBUG	./lib/fddi.c	63;"	d	file:
_DEBUG	./lib/hippi.c	61;"	d	file:
_DEBUG	./lib/hippi.c	63;"	d	file:
_DEBUG	./lib/ib.c	60;"	d	file:
_DEBUG	./lib/ib.c	62;"	d	file:
_DEBUG	./lib/netrom.c	83;"	d	file:
_DEBUG	./lib/netrom.c	85;"	d	file:
_DEBUG	./lib/tr.c	54;"	d	file:
_DEBUG	./lib/tr.c	56;"	d	file:
_GNU_SOURCE	./nameif.c	9;"	d	file:
_IPX_H_	./include/ipx.h	5;"	d
_NET_FEATURES_H	./lib/net-features.h	30;"	d
_PATH_DEVPTMX	./slattach.c	71;"	d	file:
_PATH_DEV_ROUTE	./lib/pathnames.h	60;"	d
_PATH_ETHERS	./lib/pathnames.h	50;"	d
_PATH_LOCKD	./slattach.c	65;"	d	file:
_PATH_PROCNET_ARP	./lib/pathnames.h	35;"	d
_PATH_PROCNET_ATALK	./lib/pathnames.h	41;"	d
_PATH_PROCNET_ATALK_ROUTE	./lib/pathnames.h	55;"	d
_PATH_PROCNET_AX25	./lib/pathnames.h	36;"	d
_PATH_PROCNET_AX25_ROUTE	./lib/pathnames.h	31;"	d
_PATH_PROCNET_DEV	./lib/pathnames.h	48;"	d
_PATH_PROCNET_DEV_MCAST	./lib/pathnames.h	54;"	d
_PATH_PROCNET_IFINET6	./lib/pathnames.h	47;"	d
_PATH_PROCNET_IGMP	./lib/pathnames.h	13;"	d
_PATH_PROCNET_IGMP6	./lib/pathnames.h	14;"	d
_PATH_PROCNET_IPX_ROUTE1	./lib/pathnames.h	39;"	d
_PATH_PROCNET_IPX_ROUTE2	./lib/pathnames.h	40;"	d
_PATH_PROCNET_IPX_SOCKET1	./lib/pathnames.h	37;"	d
_PATH_PROCNET_IPX_SOCKET2	./lib/pathnames.h	38;"	d
_PATH_PROCNET_IP_ACC	./lib/pathnames.h	44;"	d
_PATH_PROCNET_IP_BLK	./lib/pathnames.h	42;"	d
_PATH_PROCNET_IP_FWD	./lib/pathnames.h	43;"	d
_PATH_PROCNET_IP_MASQ	./lib/pathnames.h	45;"	d
_PATH_PROCNET_NDISC	./lib/pathnames.h	46;"	d
_PATH_PROCNET_NR	./lib/pathnames.h	32;"	d
_PATH_PROCNET_NR_NEIGH	./lib/pathnames.h	33;"	d
_PATH_PROCNET_NR_NODES	./lib/pathnames.h	34;"	d
_PATH_PROCNET_RARP	./lib/pathnames.h	49;"	d
_PATH_PROCNET_RAW	./lib/pathnames.h	25;"	d
_PATH_PROCNET_RAW6	./lib/pathnames.h	26;"	d
_PATH_PROCNET_ROSE_ROUTE	./lib/pathnames.h	51;"	d
_PATH_PROCNET_ROUTE	./lib/pathnames.h	28;"	d
_PATH_PROCNET_ROUTE6	./lib/pathnames.h	29;"	d
_PATH_PROCNET_RTCACHE	./lib/pathnames.h	30;"	d
_PATH_PROCNET_SCTP6ASSOCS	./lib/pathnames.h	24;"	d
_PATH_PROCNET_SCTP6EPTS	./lib/pathnames.h	22;"	d
_PATH_PROCNET_SCTPASSOCS	./lib/pathnames.h	23;"	d
_PATH_PROCNET_SCTPEPTS	./lib/pathnames.h	21;"	d
_PATH_PROCNET_TCP	./lib/pathnames.h	15;"	d
_PATH_PROCNET_TCP6	./lib/pathnames.h	16;"	d
_PATH_PROCNET_UDP	./lib/pathnames.h	17;"	d
_PATH_PROCNET_UDP6	./lib/pathnames.h	18;"	d
_PATH_PROCNET_UDPLITE	./lib/pathnames.h	19;"	d
_PATH_PROCNET_UDPLITE6	./lib/pathnames.h	20;"	d
_PATH_PROCNET_UNIX	./lib/pathnames.h	27;"	d
_PATH_PROCNET_X25	./lib/pathnames.h	52;"	d
_PATH_PROCNET_X25_ROUTE	./lib/pathnames.h	53;"	d
_PATH_SYS_BLUETOOTH_L2CAP	./lib/pathnames.h	56;"	d
_PATH_SYS_BLUETOOTH_RFCOMM	./lib/pathnames.h	57;"	d
_UID_UUCP	./slattach.c	68;"	d	file:
__OPTIMIZE__	./intl.h	5;"	d
__UTILS_H__	./include/util-ank.h	2;"	d
activate	./lib/net-support.h	/^    int (*activate) (int fd);$/;"	m	struct:hwtype
activate_init	./lib/activate.c	/^void activate_init(void)$/;"	f
activate_ld	./lib/activate.c	/^int activate_ld(const char *hwname, int fd)$/;"	f
adaptive_hwtype	./lib/slip.c	/^struct hwtype adaptive_hwtype =$/;"	v	typeref:struct:hwtype
add2list	./lib/inet.c	/^static void add2list(struct service **namebase, struct service *item)$/;"	f	file:
addchange	./nameif.c	/^int addchange(char *p, struct change *ch, char *pos)$/;"	f
addr	./ifconfig.c	/^    unsigned long addr;$/;"	m	struct:ifcmd	file:
addr	./include/interface.h	/^    struct sockaddr addr;	\/* IP address            *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
addr	./ipmaddr.c	/^	inet_prefix	addr;$/;"	m	struct:ma_info	file:
addr	./lib/inet.c	/^    struct sockaddr_in addr;$/;"	m	struct:addr	typeref:struct:addr::sockaddr_in	file:
addr	./lib/inet.c	/^struct addr {$/;"	s	file:
addr_do_one	./netstat.c	/^static void addr_do_one(char *buf, size_t buf_len, size_t short_len, struct aftype *ap,$/;"	f	file:
addr_family	./ifconfig.c	/^int addr_family = 0;		\/* currently selected AF        *\/$/;"	v
af	./lib/net-support.h	/^    int af;$/;"	m	struct:aftype
afinit	./lib/af.c	/^void afinit()$/;"	f
afname	./lib/af.c	/^char afname[256] = "";$/;"	v
aftrans	./lib/af.c	/^} aftrans[] = {$/;"	v	typeref:struct:aftrans_t
aftrans_def	./lib/af.c	/^void aftrans_def(char *tool, char *argv0, char *dflt)$/;"	f
aftrans_opt	./lib/af.c	/^int aftrans_opt(const char *arg)$/;"	f
aftrans_t	./lib/af.c	/^struct aftrans_t {$/;"	s	file:
aftype	./lib/net-support.h	/^struct aftype {$/;"	s
aftypes	./lib/af.c	/^struct aftype *aftypes[] =$/;"	v	typeref:struct:aftype
alen	./lib/net-support.h	/^    int alen;$/;"	m	struct:aftype
alen	./lib/net-support.h	/^    int alen;$/;"	m	struct:hwtype
alias	./lib/af.c	/^    char *alias;$/;"	m	struct:aftrans_t	file:
ap	./arp.c	/^struct aftype *ap;		\/* current address family       *\/$/;"	v	typeref:struct:aftype
ap	./lib/masq_info.c	/^static struct aftype *ap;	\/* current address family       *\/$/;"	v	typeref:struct:aftype	file:
ap	./route.c	/^struct aftype *ap; \/\/ selected address family$/;"	v	typeref:struct:aftype
arcnet_hwtype	./lib/arcnet.c	/^struct hwtype arcnet_hwtype =$/;"	v	typeref:struct:hwtype
arp_del	./arp.c	/^static int arp_del(char **args)$/;"	f	file:
arp_disp	./arp.c	/^static void arp_disp(const char *name, const char *ip, int type, int arp_flags, const char *hwa, const char *mask, const char *dev)$/;"	f	file:
arp_disp_2	./arp.c	/^static void arp_disp_2(const char *name, int type, int arp_flags, const char *hwa, const char *mask, const char *dev)$/;"	f	file:
arp_file	./arp.c	/^static int arp_file(char *name)$/;"	f	file:
arp_getdevhw	./arp.c	/^static int arp_getdevhw(char *ifname, struct sockaddr *sa, struct hwtype *hw)$/;"	f	file:
arp_set	./arp.c	/^static int arp_set(char **args)$/;"	f	file:
arp_show	./arp.c	/^static int arp_show(char *name)$/;"	f	file:
ash_aftype	./lib/ash.c	/^struct aftype ash_aftype =$/;"	v	typeref:struct:aftype
ash_hwtype	./lib/ash.c	/^struct hwtype ash_hwtype =$/;"	v	typeref:struct:hwtype
ash_hwtype	./lib/ash.c	/^struct hwtype ash_hwtype;$/;"	v	typeref:struct:hwtype
ax25_aftype	./lib/ax25.c	/^struct aftype ax25_aftype =$/;"	v	typeref:struct:aftype
ax25_hwtype	./lib/ax25.c	/^struct hwtype ax25_hwtype =$/;"	v	typeref:struct:hwtype
ax25_info	./netstat.c	/^static int ax25_info(void)$/;"	f	file:
base	./ifconfig.c	/^    char *base;$/;"	m	struct:ifcmd	file:
baselen	./ifconfig.c	/^    int baselen;$/;"	m	struct:ifcmd	file:
bitlen	./include/util-ank.h	/^	__s16 bitlen;$/;"	m	struct:__anon1
bluetooth_state	./netstat.c	/^const char *bluetooth_state(int state)$/;"	f
bmcr_bits	./mii-diag.c	/^static const char *bmcr_bits[] = {$/;"	v	file:
bool	./configure.sh	/^function bool()$/;"	f
brief_usage_msg	./ether-wake.c	/^static char brief_usage_msg[] =$/;"	v	file:
broadaddr	./include/interface.h	/^    struct sockaddr broadaddr;	\/* IP broadcast address  *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
bytelen	./include/util-ank.h	/^	__u8 bytelen;$/;"	m	struct:__anon1
change	./nameif.c	/^struct change {$/;"	s	file:
clist	./nameif.c	/^struct change *clist;$/;"	v	typeref:struct:change
clr_flag	./ifconfig.c	/^static int clr_flag(char *ifname, short flag)$/;"	f	file:
cmpentries	./statistics.c	/^int cmpentries(const void *a, const void *b)$/;"	f
code	./slattach.c	/^  int	code;$/;"	m	struct:__anon4	file:
collisions	./include/interface.h	/^    unsigned long collisions;$/;"	m	struct:user_net_device_stats
complain	./nameif.c	/^void complain(char *fmt, ...)$/;"	f
cpytitle	./statistics.c	/^void cpytitle(char *original, char *new)$/;"	f
cs	./lib/nstrcmp.c	/^int cs(int s)$/;"	f
cslip6_hwtype	./lib/slip.c	/^struct hwtype cslip6_hwtype =$/;"	v	typeref:struct:hwtype
cslip_hwtype	./lib/slip.c	/^struct hwtype cslip_hwtype =$/;"	v	typeref:struct:hwtype
ctl_sk	./nameif.c	/^int ctl_sk = -1;$/;"	v
cutalias	./lib/nstrcmp.c	/^char* cutalias(char* name)$/;"	f
data	./include/util-ank.h	/^	__u32 data[4];$/;"	m	struct:__anon1
ddp_aftype	./lib/ddp.c	/^struct aftype ddp_aftype =$/;"	v	typeref:struct:aftype
ddp_print	./lib/ddp.c	/^static const char *ddp_print(const char *ptr)$/;"	f	file:
ddp_sprint	./lib/ddp.c	/^static const char *ddp_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
ddpaddr	./include/interface.h	/^    struct sockaddr ddpaddr;	\/* Appletalk DDP address *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
debug	./ether-wake.c	/^int debug = 0;$/;"	v
debug	./mii-diag.c	/^	debug = 0,$/;"	v
default_conf	./nameif.c	/^const char default_conf[] = "\/etc\/mactab";$/;"	v
delta	./lib/masq_info.c	/^    short delta;		\/* Delta in sequence numbers *\/$/;"	m	struct:masq	file:
device	./arp.c	/^char device[16] = "";		\/* current device               *\/$/;"	v
display_cache	./rarp.c	/^static int display_cache(void)$/;"	f	file:
dlci_hwtype	./lib/frame.c	/^struct hwtype dlci_hwtype =$/;"	v	typeref:struct:hwtype
do_add	./iptunnel.c	/^static int do_add(int cmd, int argc, char **argv)$/;"	f	file:
do_add_ioctl	./iptunnel.c	/^static int do_add_ioctl(int cmd, char *basedev, struct ip_tunnel_parm *p)$/;"	f	file:
do_del	./iptunnel.c	/^int do_del(int argc, char **argv)$/;"	f
do_del_ioctl	./iptunnel.c	/^static int do_del_ioctl(char *basedev, struct ip_tunnel_parm *p)$/;"	f	file:
do_get_ioctl	./iptunnel.c	/^static int do_get_ioctl(char *basedev, struct ip_tunnel_parm *p)$/;"	f	file:
do_if_fetch	./lib/interface.c	/^int do_if_fetch(struct interface *ife)$/;"	f
do_if_print	./lib/interface.c	/^int do_if_print(struct interface *ife, void *cookie)$/;"	f
do_ifcmd	./ifconfig.c	/^static int do_ifcmd(struct interface *x, struct ifcmd *ptr)$/;"	f	file:
do_ioctl_get_ifindex	./iptunnel.c	/^static int do_ioctl_get_ifindex(char *dev)$/;"	f	file:
do_ioctl_get_ifname	./iptunnel.c	/^static char * do_ioctl_get_ifname(int idx)$/;"	f	file:
do_ioctl_get_iftype	./iptunnel.c	/^static int do_ioctl_get_iftype(char *dev)$/;"	f	file:
do_iptunnel	./iptunnel.c	/^int do_iptunnel(int argc, char **argv)$/;"	f
do_multiaddr	./ipmaddr.c	/^int do_multiaddr(int argc, char **argv)$/;"	f
do_one_xcvr	./mii-diag.c	/^int do_one_xcvr(int skfd)$/;"	f
do_one_xcvr	./mii-tool.c	/^static int do_one_xcvr(int skfd, char *ifname, int maybe)$/;"	f	file:
do_ppp	./lib/ppp.c	/^static int do_ppp(int fd)$/;"	f	file:
do_show	./iptunnel.c	/^static int do_show(int argc, char **argv)$/;"	f	file:
do_strip	./lib/strip.c	/^static int do_strip(int fd)$/;"	f	file:
do_tunnels_list	./iptunnel.c	/^static int do_tunnels_list(struct ip_tunnel_parm *p)$/;"	f	file:
do_wake	./ether-wake.c	/^static int do_wake(struct interface *ife, void *cookie) {$/;"	f	file:
dotest	./lib/nstrcmp.c	/^int dotest(char* a, char* b, int exp)$/;"	f
dport	./lib/masq_info.c	/^    unsigned short sport, dport;	\/* Source and destination ports *\/$/;"	m	struct:masq	file:
dst	./lib/masq_info.c	/^    struct sockaddr_in src, dst;	\/* Source and destination IP addresses *\/$/;"	m	struct:masq	typeref:struct:masq::	file:
dstaddr	./include/interface.h	/^    struct sockaddr dstaddr;	\/* P-P IP address        *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
ec_aftype	./lib/econet.c	/^struct aftype ec_aftype =$/;"	v	typeref:struct:aftype
ec_hwtype	./lib/ec_hw.c	/^struct hwtype ec_hwtype =$/;"	v	typeref:struct:hwtype
ec_input	./lib/econet.c	/^ec_input(int type, char *bufp, struct sockaddr *sap)$/;"	f	file:
ec_print	./lib/econet.c	/^ec_print(const char *ptr)$/;"	f	file:
ec_sprint	./lib/econet.c	/^ec_sprint(struct sockaddr *sap, int numeric)$/;"	f	file:
ecaddr	./include/interface.h	/^    struct sockaddr ecaddr;	\/* Econet address        *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
entry	./statistics.c	/^struct entry {$/;"	s	file:
err	./nameif.c	/^void err(char *msg)$/;"	f
ether_hwtype	./lib/ether.c	/^struct hwtype ether_hwtype =$/;"	v	typeref:struct:hwtype
eui64_hwtype	./lib/eui64.c	/^struct hwtype eui64_hwtype =$/;"	v	typeref:struct:hwtype
eui64_hwtype	./lib/eui64.c	/^struct hwtype eui64_hwtype;$/;"	v	typeref:struct:hwtype
expires	./lib/masq_info.c	/^    unsigned long expires;	\/* Expiration timer *\/$/;"	m	struct:masq	file:
extract_type_1_socket_inode	./netstat.c	/^static int extract_type_1_socket_inode(const char lname[], unsigned long * inode_p) {$/;"	f	file:
extract_type_2_socket_inode	./netstat.c	/^static int extract_type_2_socket_inode(const char lname[], unsigned long * inode_p) {$/;"	f	file:
f_raw	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
f_sctp	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
f_tcp	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
f_udp	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
f_unknown	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
family	./include/util-ank.h	/^	__u8 family;$/;"	m	struct:__anon1
fd	./lib/net-support.h	/^    int fd;$/;"	m	struct:aftype
fddi_hwtype	./lib/fddi.c	/^struct hwtype fddi_hwtype =$/;"	v	typeref:struct:hwtype
features	./ipmaddr.c	/^	char		*features;$/;"	m	struct:ma_info	file:
filter_dev	./ipmaddr.c	/^char filter_dev[16];$/;"	v
filter_family	./ipmaddr.c	/^int  filter_family;$/;"	v
finish_this_one	./netstat.c	/^static void finish_this_one(int uid, unsigned long inode, const char *timers)$/;"	f	file:
fix_v4_address	./lib/inet6.c	/^char * fix_v4_address(char *buf, struct in6_addr *in6)$/;"	f
fixed_speed	./mii-diag.c	/^static int fixed_speed = -1;$/;"	v	file:
fixed_speed	./mii-tool.c	/^static int fixed_speed = 0;$/;"	v	file:
flag	./ifconfig.c	/^    int flag;$/;"	m	struct:ifcmd	file:
flag	./lib/af.c	/^    int *flag;$/;"	m	struct:aftrans_t	file:
flag	./statistics.c	/^    int *flag;$/;"	m	struct:tabtab	file:
flag_all	./netstat.c	/^int flag_all = 0;$/;"	v
flag_arg	./netstat.c	/^int flag_arg = 0;$/;"	v
flag_ash	./lib/af.c	/^int flag_ash;$/;"	v
flag_ax25	./lib/af.c	/^int flag_ax25;$/;"	v
flag_bluetooth	./lib/af.c	/^int flag_bluetooth;$/;"	v
flag_cf	./netstat.c	/^int flag_cf  = 0;$/;"	v
flag_cnt	./netstat.c	/^int flag_cnt = 0;$/;"	v
flag_ddp	./lib/af.c	/^int flag_ddp;$/;"	v
flag_deb	./netstat.c	/^int flag_deb = 0;$/;"	v
flag_econet	./lib/af.c	/^int flag_econet;$/;"	v
flag_exp	./netstat.c	/^int flag_exp = 1;$/;"	v
flag_file	./lib/net-support.h	/^    char *flag_file;$/;"	m	struct:aftype
flag_igmp	./netstat.c	/^int flag_igmp= 0;$/;"	v
flag_inet	./lib/af.c	/^int flag_inet;$/;"	v
flag_inet6	./lib/af.c	/^int flag_inet6;$/;"	v
flag_int	./netstat.c	/^int flag_int = 0;$/;"	v
flag_int_name	./netstat.c	/^char *flag_int_name = NULL;$/;"	v
flag_ipx	./lib/af.c	/^int flag_ipx;$/;"	v
flag_l2cap	./netstat.c	/^int flag_l2cap = 0;$/;"	v
flag_lst	./netstat.c	/^int flag_lst = 0;$/;"	v
flag_mas	./netstat.c	/^int flag_mas = 0;$/;"	v
flag_netrom	./lib/af.c	/^int flag_netrom;$/;"	v
flag_noprot	./netstat.c	/^int flag_noprot = 0;$/;"	v
flag_not	./netstat.c	/^int flag_not = 0;$/;"	v
flag_opt	./netstat.c	/^int flag_opt = 0;$/;"	v
flag_prg	./netstat.c	/^int flag_prg = 0;$/;"	v
flag_raw	./netstat.c	/^int flag_raw = 0;$/;"	v
flag_rfcomm	./netstat.c	/^int flag_rfcomm = 0;$/;"	v
flag_rom	./netstat.c	/^int flag_rom = 0;$/;"	v
flag_rose	./lib/af.c	/^int flag_rose;$/;"	v
flag_rou	./netstat.c	/^int flag_rou = 0;$/;"	v
flag_sctp	./netstat.c	/^int flag_sctp= 0;$/;"	v
flag_selinux	./netstat.c	/^int flag_selinux = 0;$/;"	v
flag_sta	./netstat.c	/^int flag_sta = 0;$/;"	v
flag_tcp	./netstat.c	/^int flag_tcp = 0;$/;"	v
flag_udp	./netstat.c	/^int flag_udp = 0;$/;"	v
flag_udplite	./netstat.c	/^int flag_udplite = 0;$/;"	v
flag_unx	./lib/af.c	/^int flag_unx;$/;"	v
flag_ver	./netstat.c	/^int flag_ver = 0;$/;"	v
flag_wide	./netstat.c	/^int flag_wide= 0;$/;"	v
flag_x25	./lib/af.c	/^int flag_x25 = 0;$/;"	v
flags	./include/interface.h	/^    short flags;		\/* various flags         *\/$/;"	m	struct:interface
flags_decode	./lib/ddp_gr.c	37;"	d	file:
fname	./nameif.c	/^const char *fname = default_conf;$/;"	v
for_all_interfaces	./lib/interface.c	/^int for_all_interfaces(int (*doit) (struct interface *, void *), void *cookie)$/;"	f
format_host	./lib/util-ank.c	/^const char *format_host(int af, void *addr, char *abuf, int alen)$/;"	f
found	./nameif.c	/^	int found;$/;"	m	struct:change	file:
frad_hwtype	./lib/frame.c	/^struct hwtype frad_hwtype =$/;"	v	typeref:struct:hwtype
full_mask	./lib/inet_sr.c	38;"	d	file:
full_mask	./lib/inet_sr.c	41;"	d	file:
get_addr	./lib/util-ank.c	/^int get_addr(inet_prefix *dst, char *arg, int family)$/;"	f
get_addr32	./lib/util-ank.c	/^__u32 get_addr32(char *name)$/;"	f
get_addr_1	./lib/util-ank.c	/^int get_addr_1(inet_prefix *addr, char *name, int family)$/;"	f
get_afntype	./lib/af.c	/^struct aftype *get_afntype(int af)$/;"	f
get_aftype	./lib/af.c	/^struct aftype *get_aftype(const char *name)$/;"	f
get_byte	./include/util-ank.h	46;"	d
get_dest_addr	./ether-wake.c	/^static int get_dest_addr(const char *hostid, struct ether_addr *eaddr)$/;"	f	file:
get_dev_fields	./lib/interface.c	/^int get_dev_fields(char *bp, struct interface *ife)$/;"	f
get_fill	./ether-wake.c	/^static int get_fill(unsigned char *pkt, struct ether_addr *eaddr)$/;"	f	file:
get_hwntype	./lib/hw.c	/^struct hwtype *get_hwntype(int type)$/;"	f
get_hwtype	./lib/hw.c	/^struct hwtype *get_hwtype(const char *name)$/;"	f
get_integer	./lib/util-ank.c	/^int get_integer(int *val, char *arg, int base)$/;"	f
get_name	./lib/interface.c	/^char *get_name(char **namep, char *p)$/;"	f
get_nmbc_parent	./ifconfig.c	/^static int get_nmbc_parent(char *parent,$/;"	f	file:
get_prefix	./lib/util-ank.c	/^int get_prefix(inet_prefix *dst, char *arg, int family)$/;"	f
get_prefix_1	./lib/util-ank.c	/^int get_prefix_1(inet_prefix *dst, char *arg, int family)$/;"	f
get_s16	./lib/util-ank.c	/^int get_s16(__s16 *val, char *arg, int base)$/;"	f
get_s8	./lib/util-ank.c	/^int get_s8(__s8 *val, char *arg, int base)$/;"	f
get_short	./include/util-ank.h	48;"	d
get_sname	./lib/inet.c	/^const char *get_sname(int socknumber, const char *proto, int numeric)$/;"	f
get_socket_for_af	./lib/af.c	/^int get_socket_for_af(int af)$/;"	f
get_u16	./lib/util-ank.c	/^int get_u16(__u16 *val, char *arg, int base)$/;"	f
get_u32	./lib/util-ank.c	/^int get_u32(__u32 *val, char *arg, int base)$/;"	f
get_u8	./lib/util-ank.c	/^int get_u8(__u8 *val, char *arg, int base)$/;"	f
get_unsigned	./lib/util-ank.c	/^int get_unsigned(unsigned *val, char *arg, int base)$/;"	f
get_ushort	./include/util-ank.h	47;"	d
get_wol_pw	./ether-wake.c	/^static int get_wol_pw(const char *optarg)$/;"	f	file:
getargs	./lib/getargs.c	/^int getargs(char *string, char *arguments[])$/;"	f
getmac	./nameif.c	/^int getmac(char *name, unsigned char *mac)$/;"	f
getmask	./lib/net-support.h	/^    int (*getmask) (char *src, struct sockaddr *mask, char *name);$/;"	m	struct:aftype
getroute_init	./lib/getroute.c	/^void getroute_init(void)$/;"	f
hamming	./lib/ash.c	/^static unsigned char hamming[16] =$/;"	v	file:
hardware	./rarp.c	/^static struct hwtype *hardware = NULL;$/;"	v	typeref:struct:hwtype	file:
has_ax25	./include/interface.h	/^    int has_ax25;$/;"	m	struct:interface
has_ddp	./include/interface.h	/^    int has_ddp;$/;"	m	struct:interface
has_econet	./include/interface.h	/^    int has_econet;$/;"	m	struct:interface
has_ip	./include/interface.h	/^    int has_ip;$/;"	m	struct:interface
has_ipx_bb	./include/interface.h	/^    int has_ipx_bb;$/;"	m	struct:interface
has_ipx_e2	./include/interface.h	/^    int has_ipx_e2;$/;"	m	struct:interface
has_ipx_e3	./include/interface.h	/^    int has_ipx_e3;$/;"	m	struct:interface
has_ipx_sn	./include/interface.h	/^    int has_ipx_sn;$/;"	m	struct:interface
has_pdelta	./lib/masq_info.c	/^static int has_pdelta;$/;"	v	file:
hdlc_hwtype	./lib/hdlclapb.c	/^struct hwtype hdlc_hwtype =$/;"	v	typeref:struct:hwtype
herror	./lib/net-support.h	/^    void (*herror) (char *text);$/;"	m	struct:aftype
hippi_hwtype	./lib/hippi.c	/^struct hwtype hippi_hwtype =$/;"	v	typeref:struct:hwtype
host	./lib/inet.c	/^    int host;$/;"	m	struct:addr	file:
hw	./arp.c	/^struct hwtype *hw;		\/* current hardware type        *\/$/;"	v	typeref:struct:hwtype
hw_null_address	./lib/hw.c	/^int hw_null_address(struct hwtype *hw, void *ap)$/;"	f
hw_set	./arp.c	/^int hw_set = 0;			\/* flag if hw-type was set (-H) *\/$/;"	v
hwaddr	./include/interface.h	/^    char hwaddr[32];		\/* HW address            *\/$/;"	m	struct:interface
hwinit	./lib/hw.c	/^void hwinit()$/;"	f
hwtype	./lib/net-support.h	/^struct hwtype {$/;"	s
hwtypes	./lib/hw.c	/^static struct hwtype *hwtypes[] =$/;"	v	typeref:struct:hwtype	file:
i_forward	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
i_inp_icmp	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
i_outp_icmp	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
i_rto_alg	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
ib_hwtype	./lib/ib.c	/^struct hwtype ib_hwtype =$/;"	v	typeref:struct:hwtype
id1	./mii-tool.c	/^    u_short	id1, id2;$/;"	m	struct:__anon2	file:
id2	./mii-tool.c	/^    u_short	id1, id2;$/;"	m	struct:__anon2	file:
if_cache_add	./lib/interface.c	/^static struct interface *if_cache_add(char *name)$/;"	f	file:
if_cache_free	./lib/interface.c	/^int if_cache_free(void)$/;"	f
if_fetch	./lib/interface.c	/^int if_fetch(struct interface *ife)$/;"	f
if_info	./ether-wake.c	/^} if_info;$/;"	t	typeref:struct:__anon5	file:
if_list_all	./lib/interface.c	/^int if_list_all = 0;	\/* do we have requested the complete proc list, yet? *\/$/;"	v
if_port_text	./lib/interface.c	/^const char *if_port_text[][4] =$/;"	v
if_print	./ifconfig.c	/^static int if_print(char *ifname)$/;"	f	file:
if_readconf	./lib/interface.c	/^static int if_readconf(void)$/;"	f	file:
if_readlist	./lib/interface.c	/^int if_readlist(void)$/;"	f
if_readlist_proc	./lib/interface.c	/^static int if_readlist_proc(char *target)$/;"	f	file:
if_readlist_rep	./lib/interface.c	/^static int if_readlist_rep(char *target, struct interface *ife)$/;"	f	file:
iface_info	./netstat.c	/^static int iface_info(void)$/;"	f	file:
ifcmd	./ifconfig.c	/^struct ifcmd {$/;"	s	file:
ife_print	./lib/interface.c	/^void ife_print(struct interface *i)$/;"	f
ife_print_long	./lib/interface.c	/^void ife_print_long(struct interface *ptr)$/;"	f
ife_print_short	./lib/interface.c	/^void ife_print_short(struct interface *ptr)$/;"	f
ife_short	./lib/interface.c	/^int ife_short;$/;"	v
ifname	./nameif.c	/^	char ifname[IFNAMSIZ+1];$/;"	m	struct:change	file:
ifr	./mii-diag.c	/^struct ifreq ifr;$/;"	v	typeref:struct:ifreq
ifr	./mii-tool.c	/^static struct ifreq ifr;$/;"	v	typeref:struct:ifreq	file:
ifr	./plipconfig.c	/^struct ifreq ifr;$/;"	v	typeref:struct:ifreq
ifr6_addr	./ifconfig.c	/^    struct in6_addr ifr6_addr;$/;"	m	struct:in6_ifreq	typeref:struct:in6_ifreq::in6_addr	file:
ifr6_ifindex	./ifconfig.c	/^    unsigned int ifr6_ifindex;$/;"	m	struct:in6_ifreq	file:
ifr6_prefixlen	./ifconfig.c	/^    __u32 ifr6_prefixlen;$/;"	m	struct:in6_ifreq	file:
ifr_newname	./nameif.c	89;"	d	file:
ifr_qlen	./include/interface.h	91;"	d
igmp_do_one	./netstat.c	/^static void igmp_do_one(int lnr, const char *line,const char *prot)$/;"	f	file:
igmp_info	./netstat.c	/^static int igmp_info(void)$/;"	f	file:
in6_ifreq	./ifconfig.c	/^struct in6_ifreq {$/;"	s	file:
in_arcnet	./lib/arcnet.c	/^static int in_arcnet(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_ash	./lib/ash.c	/^in_ash(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_ether	./lib/ether.c	/^static int in_ether(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_eui64	./lib/eui64.c	/^static int in_eui64( char *bufp, struct sockaddr *sap )$/;"	f	file:
in_fddi	./lib/fddi.c	/^static int in_fddi(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_hippi	./lib/hippi.c	/^static int in_hippi(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_ib	./lib/ib.c	/^static int in_ib(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_strip	./lib/strip.c	/^in_strip(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_tr	./lib/tr.c	/^static int in_tr(char *bufp, struct sockaddr *sap)$/;"	f	file:
in_tunnel	./lib/tunnel.c	/^static int in_tunnel(char *bufp, struct sockaddr *sap)$/;"	f	file:
indent	./statistics.c	/^    int indent;$/;"	m	struct:statedesc	file:
index	./ipmaddr.c	/^	int		index;$/;"	m	struct:ma_info	file:
inet6_aftype	./lib/inet6.c	/^struct aftype inet6_aftype =$/;"	v	typeref:struct:aftype
inet_addr_match	./lib/util-ank.c	/^int inet_addr_match(inet_prefix *a, inet_prefix *b, int bits)$/;"	f
inet_aftype	./lib/inet.c	/^struct aftype inet_aftype =$/;"	v	typeref:struct:aftype
inet_prefix	./include/util-ank.h	/^} inet_prefix;$/;"	t	typeref:struct:__anon1
initseq	./lib/masq_info.c	/^    unsigned long initseq;	\/* Add delta from this seq. on *\/$/;"	m	struct:masq	file:
inittab	./statistics.c	/^void inittab(void)$/;"	f
inittab6	./statistics.c	/^void inittab6(void)$/;"	f
inode	./netstat.c	/^    unsigned long inode;$/;"	m	struct:prg_node	file:
input	./lib/net-support.h	/^    int (*input) (char *, struct sockaddr *);$/;"	m	struct:hwtype
input	./lib/net-support.h	/^    int (*input) (int type, char *bufp, struct sockaddr *);$/;"	m	struct:aftype
int	./configure.sh	/^function int()$/;"	f
int_last	./lib/interface.c	/^static struct interface *int_list, *int_last;$/;"	v	typeref:struct:	file:
int_list	./lib/interface.c	/^static struct interface *int_list, *int_last;$/;"	v	typeref:struct:interface	file:
interface	./include/interface.h	/^struct interface {$/;"	s
invarg	./lib/util-ank.c	/^void invarg(char *msg)$/;"	f
ip_masq_info	./lib/masq_info.c	/^int ip_masq_info(int numeric_host, int numeric_port, int ext)$/;"	f
ipx_aftype	./lib/ipx.c	/^struct aftype ipx_aftype =$/;"	v	typeref:struct:aftype
ipx_getaddr	./lib/interface.c	/^static int ipx_getaddr(int sock, int ft, struct ifreq *ifr)$/;"	f	file:
ipx_info	./netstat.c	/^static int ipx_info(void)$/;"	f	file:
ipxaddr_bb	./include/interface.h	/^    struct sockaddr ipxaddr_bb;	\/* IPX network address   *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
ipxaddr_e2	./include/interface.h	/^    struct sockaddr ipxaddr_e2;	\/* IPX network address   *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
ipxaddr_e3	./include/interface.h	/^    struct sockaddr ipxaddr_e3;	\/* IPX network address   *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
ipxaddr_sn	./include/interface.h	/^    struct sockaddr ipxaddr_sn;	\/* IPX network address   *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
irda_hwtype	./lib/irda.c	/^struct hwtype irda_hwtype =$/;"	v	typeref:struct:hwtype
irda_print	./lib/irda.c	/^static const char *irda_print(const char *ptr)$/;"	f	file:
keepalive	./include/interface.h	/^    int keepalive;		\/* keepalive value for SLIP *\/$/;"	m	struct:interface
kernel_version	./lib/util.c	/^int kernel_version(void)$/;"	f
l2cap_do_one	./netstat.c	/^static void l2cap_do_one(int nr, const char *line, const char *prot)$/;"	f	file:
l2cap_info	./netstat.c	/^static int l2cap_info(void)$/;"	f	file:
lapb_hwtype	./lib/hdlclapb.c	/^struct hwtype lapb_hwtype =$/;"	v	typeref:struct:hwtype
long_usage_msg	./mii-diag.c	/^static const char long_usage_msg[] =$/;"	v	file:
longopts	./mii-diag.c	/^struct option longopts[] = {$/;"	v	typeref:struct:option
longopts	./mii-tool.c	/^struct option longopts[] = {$/;"	v	typeref:struct:option
longopts	./rarp.c	/^static struct option longopts[] =$/;"	v	typeref:struct:option	file:
lookup_interface	./lib/interface.c	/^struct interface *lookup_interface(char *name)$/;"	f
lookupmac	./nameif.c	/^struct change *lookupmac(unsigned char *mac)$/;"	f
loop_hwtype	./lib/loopback.c	/^struct hwtype loop_hwtype =$/;"	v	typeref:struct:hwtype
lopt	./nameif.c	/^struct option lopt[] = {$/;"	v	typeref:struct:option
ma_info	./ipmaddr.c	/^struct ma_info$/;"	s	file:
mac	./nameif.c	/^	unsigned char mac[6];$/;"	m	struct:change	file:
maddr_ins	./ipmaddr.c	/^void maddr_ins(struct ma_info **lst, struct ma_info *m)$/;"	f
main	./arp.c	/^int main(int argc, char **argv)$/;"	f
main	./ether-wake.c	/^int main(int argc, char *argv[])$/;"	f
main	./hostname.c	/^int main(int argc, char **argv)$/;"	f
main	./ifconfig.c	/^int main(int argc, char **argv)$/;"	f
main	./ipmaddr.c	/^int main(int argc, char **argv)$/;"	f
main	./iptunnel.c	/^int main(int argc, char **argv)$/;"	f
main	./lib/nstrcmp.c	/^int main()$/;"	f
main	./mii-diag.c	/^main(int argc, char **argv)$/;"	f
main	./mii-tool.c	/^int main(int argc, char **argv)$/;"	f
main	./nameif.c	/^int main(int ac, char **av)$/;"	f
main	./netstat.c	/^int main$/;"	f
main	./plipconfig.c	/^int main(int argc, char **argv)$/;"	f
main	./rarp.c	/^int main(int argc, char **argv)$/;"	f
main	./route.c	/^int main(int argc, char **argv)$/;"	f
main	./slattach.c	/^main(int argc, char *argv[])$/;"	f
mandir	./man/Makefile	/^mandir=\/usr\/share\/man$/;"	m
map	./include/interface.h	/^    struct ifmap map;		\/* hardware setup        *\/$/;"	m	struct:interface	typeref:struct:interface::ifmap
mask_in_addr	./lib/inet_sr.c	37;"	d	file:
mask_in_addr	./lib/inet_sr.c	40;"	d	file:
masq	./lib/masq_info.c	/^struct masq {$/;"	s	file:
matches	./lib/util-ank.c	/^int matches(char *cmd, char *pattern)$/;"	f
mdio_read	./mii-diag.c	/^int mdio_read(int skfd, int phy_id, int location)$/;"	f
mdio_read	./mii-tool.c	/^static int mdio_read(int skfd, int location)$/;"	f	file:
mdio_write	./mii-diag.c	/^void mdio_write(int skfd, int phy_id, int location, int value)$/;"	f
mdio_write	./mii-tool.c	/^static void mdio_write(int skfd, int location, int value)$/;"	f	file:
media	./mii-tool.c	/^} media[] = {$/;"	v	typeref:struct:__anon3
media_list	./mii-tool.c	/^static const char *media_list(unsigned mask, unsigned mask2, int best)$/;"	f	file:
media_names	./mii-diag.c	/^static const char *media_names[] = {$/;"	v	file:
mii_id	./mii-tool.c	/^} mii_id[] = {$/;"	v	typeref:struct:__anon2	file:
monitor_mii	./mii-diag.c	/^void monitor_mii(long ioaddr, int phy_id)$/;"	f
monitor_status	./mii-diag.c	/^static void monitor_status(long ioaddr, int phy_id)$/;"	f	file:
mport	./lib/masq_info.c	/^    unsigned short mport;	\/* Masqueraded port *\/$/;"	m	struct:masq	file:
msg_level	./mii-diag.c	/^static int msg_level = -1;$/;"	v	file:
mtu	./include/interface.h	/^    int mtu;			\/* MTU value             *\/$/;"	m	struct:interface
multiaddr_list	./ipmaddr.c	/^static int multiaddr_list(int argc, char **argv)$/;"	f	file:
multiaddr_modify	./ipmaddr.c	/^int multiaddr_modify(int cmd, int argc, char **argv)$/;"	f
name	./include/interface.h	/^    char name[IFNAMSIZ];	\/* interface name        *\/$/;"	m	struct:interface
name	./ipmaddr.c	/^	char		name[IFNAMSIZ];$/;"	m	struct:ma_info	file:
name	./lib/af.c	/^    char *name;$/;"	m	struct:aftrans_t	file:
name	./lib/inet.c	/^    char *name;$/;"	m	struct:addr	file:
name	./lib/inet.c	/^    char *name;$/;"	m	struct:service	file:
name	./lib/net-support.h	/^    char *name;$/;"	m	struct:aftype
name	./lib/net-support.h	/^    char *name;$/;"	m	struct:hwtype
name	./mii-tool.c	/^    char	*name;$/;"	m	struct:__anon2	file:
name	./mii-tool.c	/^    char	*name;$/;"	m	struct:__anon3	file:
name	./netstat.c	/^    char name[PROGNAME_WIDTH];$/;"	m	struct:prg_node	file:
netmask	./include/interface.h	/^    struct sockaddr netmask;	\/* IP network mask       *\/$/;"	m	struct:interface	typeref:struct:interface::sockaddr
netmax	./lib/util.h	20;"	d
netmin	./lib/util.h	19;"	d
netrom_aftype	./lib/netrom.c	/^struct aftype netrom_aftype =$/;"	v	typeref:struct:aftype
netrom_errmsg	./lib/netrom.c	/^static char netrom_errmsg[128];$/;"	v	file:
netrom_hwtype	./lib/netrom.c	/^struct hwtype netrom_hwtype =$/;"	v	typeref:struct:hwtype
netrom_info	./netstat.c	/^static int netrom_info(void)$/;"	f	file:
netrom_state	./netstat.c	/^static const char *netrom_state[] =$/;"	v	file:
new	./lib/util.h	7;"	d
new_ioctl_nums	./mii-diag.c	/^int new_ioctl_nums;$/;"	v
newtable	./statistics.c	/^struct tabtab *newtable(struct tabtab *tabs, char *title)$/;"	f
next	./include/interface.h	/^    struct interface *next, *prev;$/;"	m	struct:interface	typeref:struct:interface::interface
next	./ipmaddr.c	/^	struct ma_info *next;$/;"	m	struct:ma_info	typeref:struct:ma_info::ma_info	file:
next	./lib/inet.c	/^    struct addr *next;$/;"	m	struct:addr	typeref:struct:addr::addr	file:
next	./lib/inet.c	/^    struct service *next;$/;"	m	struct:service	typeref:struct:service::service	file:
next	./nameif.c	/^	struct change *next;$/;"	m	struct:change	typeref:struct:change::change	file:
next	./netstat.c	/^    struct prg_node *next;$/;"	m	struct:prg_node	typeref:struct:prg_node::prg_node	file:
next	./netstat.c	/^  struct tcp_node *next;$/;"	m	struct:tcp_node	typeref:struct:tcp_node::tcp_node	file:
no_rarp_message	./rarp.c	/^static char no_rarp_message[] = N_("This kernel does not support RARP.\\n");$/;"	v	file:
normal	./statistics.c	31;"	d	file:
notnull	./netstat.c	1379;"	d	file:
nstrcmp	./lib/nstrcmp.c	/^int nstrcmp(const char *ap, const char *bp)$/;"	f
number	./lib/inet.c	/^    int number;$/;"	m	struct:service	file:
number	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
nway_advertise	./mii-diag.c	/^static int nway_advertise = 0;$/;"	v	file:
nway_advertise	./mii-tool.c	/^static int nway_advertise = 0;$/;"	v	file:
oom	./lib/util.c	/^static void oom(void)$/;"	f	file:
opensock	./nameif.c	/^void opensock(void)$/;"	f
opt_D	./arp.c	/^int opt_D = 0;			\/* HW-address is devicename     *\/$/;"	v
opt_G	./mii-diag.c	/^	opt_G = 0,$/;"	v
opt_G_string	./mii-diag.c	/^char *opt_G_string = NULL;$/;"	v
opt_L	./slattach.c	/^int		opt_L = 0;		\/* 3-wire mode flag		*\/$/;"	v
opt_N	./arp.c	/^int opt_N = 0;			\/* use symbolic names           *\/$/;"	v
opt_a	./arp.c	/^int opt_a = 0;			\/* all entries, substring match *\/$/;"	v
opt_a	./ifconfig.c	/^int opt_a = 0;			\/* show all interfaces          *\/$/;"	v
opt_a	./mii-diag.c	/^unsigned int opt_a = 0,					\/* Show-all-interfaces flag. *\/$/;"	v
opt_broadcast	./ether-wake.c	/^static int opt_no_src_addr = 0, opt_broadcast = 0;$/;"	v	file:
opt_c	./slattach.c	/^int		opt_c = 0;		\/* "command" to run at exit	*\/$/;"	v
opt_d	./slattach.c	/^int		opt_d = 0;		\/* debug flag			*\/$/;"	v
opt_e	./arp.c	/^int opt_e = 0;			\/* 0=BSD output, 1=new linux    *\/$/;"	v
opt_e	./route.c	/^int opt_e = 1;     \/\/ 1,2,3=type of routetable$/;"	v
opt_e	./slattach.c	/^int		opt_e = 0;		\/* "activate only" flag		*\/$/;"	v
opt_f	./mii-diag.c	/^	opt_f = 0,					\/* Force the operation. *\/$/;"	v
opt_fc	./route.c	/^int opt_fc = 0;    \/\/ routing cache\/FIB$/;"	v
opt_g	./mii-diag.c	/^	opt_g = 0,$/;"	v
opt_h	./route.c	/^int opt_h = 0;     \/\/ help selected$/;"	v
opt_h	./slattach.c	/^int		opt_h = 0;		\/* "hangup" on carrier loss	*\/$/;"	v
opt_k	./slattach.c	/^int		opt_k = 0;		\/* "keepalive" value		*\/$/;"	v
opt_l	./slattach.c	/^int		opt_l = 0;		\/* "lock it" flag		*\/$/;"	v
opt_log	./mii-tool.c	/^    opt_log = 0,$/;"	v	file:
opt_m	./slattach.c	/^int		opt_m = 0;		\/* "set RAW mode" flag		*\/$/;"	v
opt_n	./arp.c	/^int opt_n = 0;			\/* do not resolve addresses     *\/$/;"	v
opt_n	./route.c	/^int opt_n = 0;     \/\/ numerical output FLAG_NUM | FLAG_SYM$/;"	v
opt_n	./slattach.c	/^int		opt_n = 0;		\/* "set No Mesg" flag		*\/$/;"	v
opt_no_src_addr	./ether-wake.c	/^static int opt_no_src_addr = 0, opt_broadcast = 0;$/;"	v	file:
opt_number	./statistics.c	/^    number = 0, opt_number, i_forward, i_inp_icmp, i_outp_icmp, i_rto_alg,$/;"	e	enum:State	file:
opt_o	./slattach.c	/^int		opt_o = 0;		\/* "outfill" value		*\/$/;"	v
opt_q	./slattach.c	/^int		opt_q = 0;		\/* "quiet" flag			*\/$/;"	v
opt_reset	./mii-diag.c	/^	opt_reset = 0,$/;"	v
opt_reset	./mii-tool.c	/^    opt_reset = 0,$/;"	v	file:
opt_restart	./mii-diag.c	/^	opt_restart = 0,$/;"	v
opt_restart	./mii-tool.c	/^    opt_restart = 0,$/;"	v	file:
opt_status	./mii-diag.c	/^	opt_status = 0,$/;"	v
opt_v	./arp.c	/^int opt_v = 0;			\/* debugging output flag        *\/$/;"	v
opt_v	./hostname.c	/^static int opt_v;$/;"	v	file:
opt_v	./ifconfig.c	/^int opt_v = 0;			\/* debugging output flag        *\/$/;"	v
opt_v	./route.c	/^int opt_v = 0;     \/\/ debugging output flag$/;"	v
opt_v	./slattach.c	/^int		opt_v = 0;		\/* Verbose flag			*\/$/;"	v
opt_version	./mii-diag.c	/^	opt_version = 0,$/;"	v
opt_version	./mii-tool.c	/^    opt_version = 0,$/;"	v	file:
opt_watch	./mii-diag.c	/^	opt_watch = 0;$/;"	v
opt_watch	./mii-tool.c	/^    opt_watch = 0;$/;"	v	file:
out	./statistics.c	/^    char *out;$/;"	m	struct:entry	file:
outfill	./include/interface.h	/^    int outfill;		\/* outfill value for SLIP *\/$/;"	m	struct:interface
outpack	./ether-wake.c	/^u_char outpack[1000];$/;"	v
outpack_sz	./ether-wake.c	/^int outpack_sz = 0;$/;"	v
override_phy	./mii-diag.c	/^static int override_phy = -1;$/;"	v	file:
override_phy	./mii-tool.c	/^static int override_phy = -1;$/;"	v	file:
parse_advertise	./mii-diag.c	/^static int parse_advertise(const char *capabilities)$/;"	f	file:
parse_args	./iptunnel.c	/^static int parse_args(int argc, char **argv, struct ip_tunnel_parm *p)$/;"	f	file:
parse_hex	./ipmaddr.c	/^static int parse_hex(char *str, unsigned char *addr)$/;"	f	file:
parse_lla	./ipmaddr.c	/^static int parse_lla(char *str, char *addr)$/;"	f	file:
parse_media	./mii-tool.c	/^static int parse_media(char *arg, unsigned *bmcr2)$/;"	f	file:
parsemac	./nameif.c	/^int parsemac(char *str, unsigned char *mac)$/;"	f
parsesnmp	./statistics.c	/^int parsesnmp(int flag_raw, int flag_tcp, int flag_udp, int flag_sctp)$/;"	f
parsesnmp6	./statistics.c	/^int parsesnmp6(int flag_raw, int flag_tcp, int flag_udp)$/;"	f
path_pts	./slattach.c	/^char *		path_pts = NULL;	\/* slave pseudo-terminal device *\/$/;"	v
pdelta	./lib/masq_info.c	/^    short pdelta;		\/* Delta in sequence numbers before last *\/$/;"	m	struct:masq	file:
pktsize	./ether-wake.c	/^	int pktsize;$/;"	m	struct:__anon5	file:
plip	./plipconfig.c	/^struct plipconf *plip;$/;"	v	typeref:struct:plipconf
ppp_hwtype	./lib/ppp.c	/^struct hwtype ppp_hwtype =$/;"	v	typeref:struct:hwtype
pr_arcnet	./lib/arcnet.c	/^static const char *pr_arcnet(const char *ptr)$/;"	f	file:
pr_ash	./lib/ash.c	/^pr_ash(const char *ptr)$/;"	f	file:
pr_dlci	./lib/frame.c	/^static const char *pr_dlci(const char *ptr)$/;"	f	file:
pr_ether	./lib/ether.c	/^static const char *pr_ether(const char *ptr)$/;"	f	file:
pr_eui64	./lib/eui64.c	/^static const char *pr_eui64(const char *ptr)$/;"	f	file:
pr_fddi	./lib/fddi.c	/^static const char *pr_fddi(const char *ptr)$/;"	f	file:
pr_hippi	./lib/hippi.c	/^static const char *pr_hippi(const char *ptr)$/;"	f	file:
pr_ib	./lib/ib.c	/^static const char *pr_ib(const char *ptr)$/;"	f	file:
pr_sash	./lib/ash.c	/^pr_sash(struct sockaddr *sap, int numeric)$/;"	f	file:
pr_strip	./lib/strip.c	/^pr_strip(const char *ptr)$/;"	f	file:
pr_tr	./lib/tr.c	/^static const char *pr_tr(const char *ptr)$/;"	f	file:
pr_tunnel	./lib/tunnel.c	/^static const char *pr_tunnel(const char *ptr)$/;"	f	file:
pr_unspec	./lib/loopback.c	/^static const char *pr_unspec(const char *ptr)$/;"	f	file:
preferred_family	./ipmaddr.c	/^int preferred_family = AF_UNSPEC;$/;"	v
preferred_family	./iptunnel.c	/^int preferred_family = AF_UNSPEC;$/;"	v
prev	./include/interface.h	/^    struct interface *next, *prev;$/;"	m	struct:interface	typeref:struct:interface::
prg_cache_add	./netstat.c	/^static void prg_cache_add(unsigned long inode, char *name, const char *scon)$/;"	f	file:
prg_cache_clear	./netstat.c	/^static void prg_cache_clear(void)$/;"	f	file:
prg_cache_get	./netstat.c	/^static const char *prg_cache_get(unsigned long inode)$/;"	f	file:
prg_cache_get_con	./netstat.c	/^static const char *prg_cache_get_con(unsigned long inode)$/;"	f	file:
prg_cache_load	./netstat.c	/^static void prg_cache_load(void)$/;"	f	file:
prg_cache_loaded	./netstat.c	/^static char prg_cache_loaded = 0;$/;"	v	file:
prg_hash	./netstat.c	/^} *prg_hash[PRG_HASH_SIZE];$/;"	v	typeref:struct:prg_node	file:
prg_node	./netstat.c	/^static struct prg_node {$/;"	s	file:
print	./lib/net-support.h	/^    const char *(*print) (const char *);$/;"	m	struct:aftype
print	./lib/net-support.h	/^    const char *(*print) (const char *);$/;"	m	struct:hwtype
print_aflist	./lib/af.c	/^void print_aflist(int type) {$/;"	f
print_hwlist	./lib/hw.c	/^void print_hwlist(int type) {$/;"	f
print_lla	./ipmaddr.c	/^static void print_lla(FILE *fp, int len, unsigned char *addr)$/;"	f	file:
print_maddr	./ipmaddr.c	/^static void print_maddr(FILE *fp, struct ma_info *list)$/;"	f	file:
print_masq	./lib/masq_info.c	/^static void print_masq(struct masq *ms, int numeric_host, int numeric_port,$/;"	f	file:
print_mlist	./ipmaddr.c	/^static void print_mlist(FILE *fp, struct ma_info *list)$/;"	f	file:
print_plip	./plipconfig.c	/^void print_plip(void)$/;"	f
print_progname_banner	./netstat.c	258;"	d	file:
print_selinux_banner	./netstat.c	260;"	d	file:
print_static	./statistics.c	/^int print_static,f_raw,f_tcp,f_udp,f_sctp,f_unknown = 1;$/;"	v
print_tunnel	./iptunnel.c	/^void print_tunnel(struct ip_tunnel_parm *p)$/;"	f
printval	./statistics.c	/^void printval(struct tabtab *tab, char *title, unsigned long long val)$/;"	f
proc_fopen	./lib/proc.c	/^FILE *proc_fopen(const char *name)$/;"	f
proc_fopen_x25_route	./lib/x25_gr.c	/^static FILE *proc_fopen_x25_route(void)$/;"	f	file:
proc_gen_fmt	./lib/proc.c	/^char *proc_gen_fmt(char *name, int more, FILE * fh,...)$/;"	f
proc_guess_fmt	./lib/proc.c	/^int proc_guess_fmt(char *name, FILE *fh, ...)$/;"	f
process6_fd	./statistics.c	/^void process6_fd(FILE *f)$/;"	f
process_fd	./statistics.c	/^int process_fd(FILE *f, int all, char *filter)$/;"	f
process_fd2	./statistics.c	/^void process_fd2(FILE *f, const char *filename)$/;"	f
process_sctp_addr_str	./netstat.c	/^static struct aftype *process_sctp_addr_str(const char *addr_str, struct sockaddr *sa)$/;"	f	file:
procinfo	./netstat.c	/^FILE *procinfo;$/;"	v
procnetdev_version	./lib/interface.c	/^int procnetdev_version(char *buf)$/;"	f
procnetdev_vsn	./lib/interface.c	/^int procnetdev_vsn = 1;$/;"	v
program_name	./hostname.c	/^static char *program_name;$/;"	v	file:
proto	./lib/masq_info.c	/^    char *proto;		\/* Which protocol are we talking? *\/$/;"	m	struct:masq	file:
rarp_delete	./rarp.c	/^static int rarp_delete(int fd, struct hostent *hp)$/;"	f	file:
rarp_file	./rarp.c	/^static int rarp_file(int fd, const char *name)$/;"	f	file:
rarp_set	./rarp.c	/^static int rarp_set(int fd, struct hostent *hp, char *hw_addr)$/;"	f	file:
raw_do_one	./netstat.c	/^static void raw_do_one(int lnr, const char *line,const char *prot)$/;"	f	file:
raw_info	./netstat.c	/^static int raw_info(void)$/;"	f	file:
raw_name	./lib/inet.c	/^static struct service *tcp_name = NULL, *udp_name = NULL, *raw_name = NULL;$/;"	v	typeref:struct:	file:
read_dev_mcast	./ipmaddr.c	/^void read_dev_mcast(struct ma_info **result_p)$/;"	f
read_igmp	./ipmaddr.c	/^void read_igmp(struct ma_info **result_p)$/;"	f
read_igmp6	./ipmaddr.c	/^void read_igmp6(struct ma_info **result_p)$/;"	f
read_masqinfo	./lib/masq_info.c	/^static int read_masqinfo(FILE * f, struct masq *mslist, int nmslist)$/;"	f	file:
read_services	./lib/inet.c	/^static int read_services(void)$/;"	f	file:
readconf	./nameif.c	/^void readconf(void)$/;"	f
readln	./configure.sh	/^function readln()$/;"	f
resolve_hosts	./ipmaddr.c	/^int resolve_hosts = 0;$/;"	v
resolve_hosts	./iptunnel.c	/^int resolve_hosts = 0;$/;"	v
rfcomm_do_one	./netstat.c	/^static void rfcomm_do_one(int nr, const char *line, const char *prot)$/;"	f	file:
rfcomm_info	./netstat.c	/^static int rfcomm_info(void)$/;"	f	file:
rindex_nondigit	./lib/nstrcmp.c	/^int rindex_nondigit(char *name)$/;"	f
rinput	./lib/net-support.h	/^    int (*rinput) (int typ, int ext, char **argv);$/;"	m	struct:aftype
rose_aftype	./lib/rose.c	/^struct aftype rose_aftype =$/;"	v	typeref:struct:aftype
rose_hwtype	./lib/rose.c	/^struct hwtype rose_hwtype =$/;"	v	typeref:struct:hwtype
route_edit	./lib/setroute.c	/^int route_edit(int action, const char *afname, int options, char **argv)$/;"	f
route_info	./lib/getroute.c	/^int route_info(const char *afname, int options)$/;"	f
rprint	./lib/net-support.h	/^    int (*rprint) (int options);$/;"	m	struct:aftype
rprint_cache	./lib/inet_gr.c	/^int rprint_cache(int ext, int numeric)$/;"	f
rprint_cache6	./lib/inet6_gr.c	/^int rprint_cache6(int ext, int numeric)$/;"	f
rprint_fib	./lib/inet_gr.c	/^int rprint_fib(int ext, int numeric)$/;"	f
rprint_fib6	./lib/inet6_gr.c	/^int rprint_fib6(int ext, int numeric)$/;"	f
rx_bytes	./include/interface.h	/^    unsigned long long rx_bytes;	\/* total bytes received         *\/$/;"	m	struct:user_net_device_stats
rx_compressed	./include/interface.h	/^    unsigned long rx_compressed;$/;"	m	struct:user_net_device_stats
rx_crc_errors	./include/interface.h	/^    unsigned long rx_crc_errors;	\/* recved pkt with crc error    *\/$/;"	m	struct:user_net_device_stats
rx_dropped	./include/interface.h	/^    unsigned long rx_dropped;	\/* no space in linux buffers    *\/$/;"	m	struct:user_net_device_stats
rx_errors	./include/interface.h	/^    unsigned long rx_errors;	\/* bad packets received         *\/$/;"	m	struct:user_net_device_stats
rx_fifo_errors	./include/interface.h	/^    unsigned long rx_fifo_errors;	\/* recv'r fifo overrun          *\/$/;"	m	struct:user_net_device_stats
rx_frame_errors	./include/interface.h	/^    unsigned long rx_frame_errors;	\/* recv'd frame alignment error *\/$/;"	m	struct:user_net_device_stats
rx_length_errors	./include/interface.h	/^    unsigned long rx_length_errors;$/;"	m	struct:user_net_device_stats
rx_missed_errors	./include/interface.h	/^    unsigned long rx_missed_errors;	\/* receiver missed packet     *\/$/;"	m	struct:user_net_device_stats
rx_multicast	./include/interface.h	/^    unsigned long rx_multicast;	\/* multicast packets received   *\/$/;"	m	struct:user_net_device_stats
rx_over_errors	./include/interface.h	/^    unsigned long rx_over_errors;	\/* receiver ring buff overflow  *\/$/;"	m	struct:user_net_device_stats
rx_packets	./include/interface.h	/^    unsigned long long rx_packets;	\/* total packets received       *\/$/;"	m	struct:user_net_device_stats
s	./ether-wake.c	/^	int s;$/;"	m	struct:__anon5	file:
s6_addr32	./netstat.c	114;"	d	file:
sVafinit	./lib/af.c	/^static short sVafinit = 0;$/;"	v	file:
sVhwinit	./lib/hw.c	/^static short sVhwinit = 0;$/;"	v	file:
safe_strncpy	./lib/util.c	/^char *safe_strncpy(char *dst, const char *src, size_t size)$/;"	f
scan_number	./lib/util-ank.c	/^int scan_number(char *arg, unsigned *val)$/;"	f
scon	./netstat.c	/^    char scon[SELINUX_WIDTH];$/;"	m	struct:prg_node	file:
sctp_assoc_do_one	./netstat.c	/^static void sctp_assoc_do_one(int lnr, char *line, const char *proto)$/;"	f	file:
sctp_eps_do_one	./netstat.c	/^static void sctp_eps_do_one(int lnr, char *line, const char *proto)$/;"	f	file:
sctp_info	./netstat.c	/^static int sctp_info(void)$/;"	f	file:
sctp_info_assocs	./netstat.c	/^static int sctp_info_assocs(void) {$/;"	f	file:
sctp_info_eps	./netstat.c	/^static int sctp_info_eps(void)$/;"	f	file:
sctp_socket_state_str	./netstat.c	/^static const char *sctp_socket_state_str(int state)$/;"	f	file:
searcher	./ifconfig.c	/^static unsigned char searcher[256];$/;"	v	file:
searchlist	./lib/inet.c	/^static struct service *searchlist(struct service *servicebase, int number)$/;"	f	file:
send_wol_packet	./ether-wake.c	/^static int send_wol_packet(char *ifname, int s, int verbose, int pktsize)$/;"	f	file:
service	./lib/inet.c	/^struct service {$/;"	s	file:
set_BMCR	./mii-diag.c	/^static int set_BMCR = -1;$/;"	v	file:
set_flag	./ifconfig.c	/^static int set_flag(char *ifname, short flag)$/;"	f	file:
set_ifstate	./ifconfig.c	/^static int set_ifstate(char *parent, in_addr_t ip, in_addr_t nm, in_addr_t bc,$/;"	f	file:
set_ip_using	./ifconfig.c	/^static int set_ip_using(const char *name, int c, unsigned long ip)$/;"	f	file:
set_netmask	./ifconfig.c	/^static int set_netmask(int skfd, struct ifreq *ifr, struct sockaddr *sa)$/;"	f	file:
setdname	./hostname.c	/^static void setdname(char *dname)$/;"	f	file:
setfilename	./hostname.c	/^static void setfilename(char *name, int what)$/;"	f	file:
sethname	./hostname.c	/^static void sethname(char *hname)$/;"	f	file:
setname	./nameif.c	/^int  setname(char *oldname, char *newname)$/;"	f
setnname	./hostname.c	/^static void setnname(char *nname)$/;"	f	file:
setroute_init	./lib/setroute.c	/^void setroute_init(void)$/;"	f
shortopts	./mii-diag.c	/^const char shortopts[] = "aA:C:DfF:gG:hmM:p:rRsvVw?";$/;"	v
show_basic_mii	./mii-diag.c	/^int show_basic_mii(long ioaddr, int phy_id)$/;"	f
show_basic_mii	./mii-tool.c	/^int show_basic_mii(int sock, int phy_id)$/;"	f
show_mii_details	./mii-diag.c	/^int  show_mii_details(long ioaddr, int phy_id)$/;"	f
show_stats	./ipmaddr.c	/^int show_stats = 0;$/;"	v
show_stats	./iptunnel.c	/^int show_stats = 0;$/;"	v
showhname	./hostname.c	/^static void showhname(char *hname, int c)$/;"	f	file:
sig_catch	./slattach.c	/^sig_catch(int sig)$/;"	f	file:
sipx_family	./include/ipx.h	/^    sa_family_t sipx_family;$/;"	m	struct:sockaddr_ipx
sipx_network	./include/ipx.h	/^    unsigned int sipx_network;$/;"	m	struct:sockaddr_ipx
sipx_node	./include/ipx.h	/^    unsigned char sipx_node[IPX_NODE_LEN];$/;"	m	struct:sockaddr_ipx
sipx_port	./include/ipx.h	/^    unsigned short sipx_port;$/;"	m	struct:sockaddr_ipx
sipx_type	./include/ipx.h	/^    unsigned char sipx_type;$/;"	m	struct:sockaddr_ipx
sipx_zero	./include/ipx.h	/^    unsigned char sipx_zero;	\/* 16 byte fill *\/$/;"	m	struct:sockaddr_ipx
sit_hwtype	./lib/sit.c	/^struct hwtype sit_hwtype =$/;"	v	typeref:struct:hwtype
size	./statistics.c	/^    size_t size;$/;"	m	struct:tabtab	file:
skfd	./lib/inet6_sr.c	/^static int skfd = -1;$/;"	v	file:
skfd	./lib/inet_sr.c	/^static int skfd = -1;$/;"	v	file:
skfd	./lib/sockets.c	/^int skfd = -1;			\/* generic raw socket desc.     *\/$/;"	v
skfd	./lib/x25_sr.c	/^static int skfd = -1;$/;"	v	file:
skfd	./mii-diag.c	/^int skfd = -1;					\/* AF_INET socket for ioctl() calls.	*\/$/;"	v
skfd	./mii-tool.c	/^static int skfd = -1;		\/* AF_INET socket for ioctl() calls. *\/$/;"	v	file:
skfd	./plipconfig.c	/^int skfd = -1;$/;"	v
slip6_hwtype	./lib/slip.c	/^struct hwtype slip6_hwtype =$/;"	v	typeref:struct:hwtype
slip_hwtype	./lib/slip.c	/^struct hwtype slip_hwtype =$/;"	v	typeref:struct:hwtype
snmp6tabs	./statistics.c	/^struct tabtab snmp6tabs[] =$/;"	v	typeref:struct:tabtab
snmptabs	./statistics.c	/^struct tabtab snmptabs[] =$/;"	v	typeref:struct:tabtab
sockaddr_ipx	./include/ipx.h	/^struct sockaddr_ipx {$/;"	s
socket_pair	./netstat.c	/^  char            *socket_pair;$/;"	m	struct:tcp_node	file:
socket_state	./netstat.c	/^} socket_state;$/;"	t	typeref:enum:__anon6	file:
sockets_open	./lib/sockets.c	/^int sockets_open(int family)$/;"	f
sockfd	./arp.c	/^int sockfd = 0;			\/* active socket descriptor     *\/$/;"	v
speed	./slattach.c	/^  const char	*speed;$/;"	m	struct:__anon4	file:
sport	./lib/masq_info.c	/^    unsigned short sport, dport;	\/* Source and destination ports *\/$/;"	m	struct:masq	file:
sprint	./lib/net-support.h	/^    const char *(*sprint) (struct sockaddr *, int numeric);$/;"	m	struct:aftype
src	./lib/masq_info.c	/^    struct sockaddr_in src, dst;	\/* Source and destination IP addresses *\/$/;"	m	struct:masq	typeref:struct:masq::sockaddr_in	file:
state	./statistics.c	/^static enum State state;$/;"	v	typeref:enum:State	file:
statedesc	./statistics.c	/^struct statedesc {$/;"	s	file:
states	./statistics.c	/^struct statedesc states[] = {$/;"	v	typeref:struct:statedesc
statistics_valid	./include/interface.h	/^    int statistics_valid;$/;"	m	struct:interface
stats	./include/interface.h	/^    struct user_net_device_stats stats;		\/* statistics            *\/$/;"	m	struct:interface	typeref:struct:interface::user_net_device_stats
strip_hwtype	./lib/strip.c	/^struct hwtype strip_hwtype = {$/;"	v	typeref:struct:hwtype
suppress_null_addr	./lib/net-support.h	/^    int suppress_null_addr;$/;"	m	struct:hwtype
tab	./statistics.c	/^    struct entry *tab;$/;"	m	struct:tabtab	typeref:struct:tabtab::entry	file:
tabtab	./statistics.c	/^struct tabtab {$/;"	s	file:
tcp_do_one	./netstat.c	/^static void tcp_do_one(int lnr, const char *line, const char *prot)$/;"	f	file:
tcp_info	./netstat.c	/^static int tcp_info(void)$/;"	f	file:
tcp_name	./lib/inet.c	/^static struct service *tcp_name = NULL, *udp_name = NULL, *raw_name = NULL;$/;"	v	typeref:struct:service	file:
tcp_node	./netstat.c	/^static struct tcp_node {$/;"	s	file:
tcp_node_compute_string_hash	./netstat.c	/^static unsigned int tcp_node_compute_string_hash(const char *p)$/;"	f	file:
tcp_node_hash	./netstat.c	/^} *tcp_node_hash[TCP_HASH_SIZE];$/;"	v	typeref:struct:tcp_node	file:
tcp_node_hash_check_and_append	./netstat.c	/^static int tcp_node_hash_check_and_append(const char *local_addr,$/;"	f	file:
tcp_node_hash_clear	./netstat.c	/^static void tcp_node_hash_clear(void)$/;"	f	file:
tcp_state	./netstat.c	/^static const char *tcp_state[] =$/;"	v	file:
test_flag	./ifconfig.c	/^static int test_flag(char *ifname, short flags)$/;"	f	file:
title	./lib/net-support.h	/^    char *title;$/;"	m	struct:aftype
title	./lib/net-support.h	/^    char *title;$/;"	m	struct:hwtype
title	./statistics.c	/^    char *title;$/;"	m	struct:entry	file:
title	./statistics.c	/^    char *title;$/;"	m	struct:statedesc	file:
title	./statistics.c	/^    char *title;$/;"	m	struct:tabtab	file:
tr_hwtype	./lib/tr.c	/^struct hwtype tr_hwtype =$/;"	v	typeref:struct:hwtype
tr_hwtype1	./lib/tr.c	/^struct hwtype tr_hwtype1 =$/;"	v	typeref:struct:hwtype
tty_already_locked	./slattach.c	/^tty_already_locked(char *nam)$/;"	f	file:
tty_close	./slattach.c	/^tty_close(void)$/;"	f	file:
tty_current	./slattach.c	/^		tty_current;		\/* current TTY device state	*\/$/;"	v	typeref:struct:
tty_fd	./slattach.c	/^		tty_fd = -1;		\/* TTY file descriptor		*\/$/;"	v
tty_find_speed	./slattach.c	/^tty_find_speed(const char *speed)$/;"	f	file:
tty_get_disc	./slattach.c	/^tty_get_disc(int *disc)$/;"	f	file:
tty_get_name	./slattach.c	/^tty_get_name(char *name)$/;"	f	file:
tty_get_state	./slattach.c	/^tty_get_state(struct termios *tty)$/;"	f	file:
tty_hangup	./slattach.c	/^tty_hangup(void)$/;"	f	file:
tty_ldisc	./slattach.c	/^		tty_ldisc,		\/* current TTY line discipline	*\/$/;"	v
tty_lock	./slattach.c	/^tty_lock(char *path, int mode)$/;"	f	file:
tty_nomesg	./slattach.c	/^tty_nomesg(int fd)$/;"	f	file:
tty_open	./slattach.c	/^tty_open(char *name, const char *speed)$/;"	f	file:
tty_saved	./slattach.c	/^struct termios	tty_saved,		\/* saved TTY device state	*\/$/;"	v	typeref:struct:termios
tty_sdisc	./slattach.c	/^int		tty_sdisc,		\/* saved TTY line discipline	*\/$/;"	v
tty_set_databits	./slattach.c	/^tty_set_databits(struct termios *tty, char *databits)$/;"	f	file:
tty_set_disc	./slattach.c	/^tty_set_disc(int disc)$/;"	f	file:
tty_set_parity	./slattach.c	/^tty_set_parity(struct termios *tty, char *parity)$/;"	f	file:
tty_set_raw	./slattach.c	/^tty_set_raw(struct termios *tty)$/;"	f	file:
tty_set_speed	./slattach.c	/^tty_set_speed(struct termios *tty, const char *speed)$/;"	f	file:
tty_set_state	./slattach.c	/^tty_set_state(struct termios *tty)$/;"	f	file:
tty_set_stopbits	./slattach.c	/^tty_set_stopbits(struct termios *tty, char *stopbits)$/;"	f	file:
tty_speeds	./slattach.c	/^} tty_speeds[] = {			\/* table of usable baud rates	*\/$/;"	v	typeref:struct:__anon4
tunnel_hwtype	./lib/tunnel.c	/^struct hwtype tunnel_hwtype =$/;"	v	typeref:struct:hwtype
tx_aborted_errors	./include/interface.h	/^    unsigned long tx_aborted_errors;$/;"	m	struct:user_net_device_stats
tx_bytes	./include/interface.h	/^    unsigned long long tx_bytes;	\/* total bytes transmitted      *\/$/;"	m	struct:user_net_device_stats
tx_carrier_errors	./include/interface.h	/^    unsigned long tx_carrier_errors;$/;"	m	struct:user_net_device_stats
tx_compressed	./include/interface.h	/^    unsigned long tx_compressed;$/;"	m	struct:user_net_device_stats
tx_dropped	./include/interface.h	/^    unsigned long tx_dropped;	\/* no space available in linux  *\/$/;"	m	struct:user_net_device_stats
tx_errors	./include/interface.h	/^    unsigned long tx_errors;	\/* packet transmit problems     *\/$/;"	m	struct:user_net_device_stats
tx_fifo_errors	./include/interface.h	/^    unsigned long tx_fifo_errors;$/;"	m	struct:user_net_device_stats
tx_heartbeat_errors	./include/interface.h	/^    unsigned long tx_heartbeat_errors;$/;"	m	struct:user_net_device_stats
tx_packets	./include/interface.h	/^    unsigned long long tx_packets;	\/* total packets transmitted    *\/$/;"	m	struct:user_net_device_stats
tx_queue_len	./include/interface.h	/^    int tx_queue_len;		\/* transmit queue length *\/$/;"	m	struct:interface
tx_window_errors	./include/interface.h	/^    unsigned long tx_window_errors;$/;"	m	struct:user_net_device_stats
type	./include/interface.h	/^    short type;			\/* if type               *\/$/;"	m	struct:interface
type	./lib/net-support.h	/^    int type;$/;"	m	struct:hwtype
type	./statistics.c	/^    enum State type;$/;"	m	struct:entry	typeref:enum:entry::State	file:
u16	./mii-diag.c	/^typedef u_int16_t u16;$/;"	t	file:
u32	./mii-diag.c	/^typedef u_int32_t u32;$/;"	t	file:
u8	./mii-diag.c	/^typedef u_int8_t u8;$/;"	t	file:
udp_do_one	./netstat.c	/^static void udp_do_one(int lnr, const char *line,const char *prot)$/;"	f	file:
udp_info	./netstat.c	/^static int udp_info(void)$/;"	f	file:
udp_name	./lib/inet.c	/^static struct service *tcp_name = NULL, *udp_name = NULL, *raw_name = NULL;$/;"	v	typeref:struct:	file:
udplite_info	./netstat.c	/^static int udplite_info(void)$/;"	f	file:
unix_aftype	./lib/unix.c	/^struct aftype unix_aftype =$/;"	v	typeref:struct:aftype
unix_do_one	./netstat.c	/^static void unix_do_one(int nr, const char *line, const char *prot)$/;"	f	file:
unix_info	./netstat.c	/^static int unix_info(void)$/;"	f	file:
unspec_aftype	./lib/unix.c	/^struct aftype unspec_aftype =$/;"	v	typeref:struct:aftype
unspec_hwtype	./lib/loopback.c	/^struct hwtype unspec_hwtype =$/;"	v	typeref:struct:hwtype
usage	./arp.c	/^static void usage(void)$/;"	f	file:
usage	./hostname.c	/^static void usage(void)$/;"	f	file:
usage	./ifconfig.c	/^static void usage(void)$/;"	f	file:
usage	./ipmaddr.c	/^static void usage(void)$/;"	f	file:
usage	./iptunnel.c	/^static void usage(void)$/;"	f	file:
usage	./lib/inet6_sr.c	/^static int usage(void)$/;"	f	file:
usage	./lib/inet_sr.c	/^static int usage(void)$/;"	f	file:
usage	./lib/x25_sr.c	/^static int usage(void)$/;"	f	file:
usage	./mii-tool.c	/^const char *usage =$/;"	v
usage	./nameif.c	/^void usage(void)$/;"	f
usage	./netstat.c	/^static void usage(void)$/;"	f	file:
usage	./plipconfig.c	/^void usage(void)$/;"	f
usage	./rarp.c	/^static void usage(void)$/;"	f	file:
usage	./route.c	/^static void usage(void)$/;"	f	file:
usage	./slattach.c	/^usage(void)$/;"	f	file:
usage_msg	./ether-wake.c	/^static char usage_msg[] =$/;"	v	file:
usage_msg	./mii-diag.c	/^static const char usage_msg[] =$/;"	v	file:
use_syslog	./nameif.c	/^int use_syslog;$/;"	v
user_net_device_stats	./include/interface.h	/^struct user_net_device_stats {$/;"	s
users	./ipmaddr.c	/^	int		users;$/;"	m	struct:ma_info	file:
value	./mii-tool.c	/^    u_short	value[2];$/;"	m	struct:__anon3	file:
verbose	./ether-wake.c	/^	int verbose;$/;"	m	struct:__anon5	file:
verbose	./mii-diag.c	/^	verbose = 0,				\/* Verbose flag. *\/$/;"	v
verbose	./mii-tool.c	/^    verbose = 0,$/;"	v	file:
version	./arp.c	/^static void version(void)$/;"	f	file:
version	./hostname.c	/^static void version(void)$/;"	f	file:
version	./ifconfig.c	/^static void version(void)$/;"	f	file:
version	./ipmaddr.c	/^static void version(void)$/;"	f	file:
version	./iptunnel.c	/^static void version(void)$/;"	f	file:
version	./mii-diag.c	/^static char version[] =$/;"	v	file:
version	./mii-tool.c	/^static void version(void)$/;"	f	file:
version	./netstat.c	/^static void version(void)$/;"	f	file:
version	./plipconfig.c	/^static void version(void)$/;"	f	file:
version	./route.c	/^static void version(void)$/;"	f	file:
version	./slattach.c	/^version(void)$/;"	f	file:
version_msg	./ether-wake.c	/^static char version_msg[] =$/;"	v	file:
wait_continous	./netstat.c	/^static void wait_continous(int reptimer)$/;"	f	file:
warning	./nameif.c	/^void warning(char *fmt, ...)$/;"	f
watch_one_xcvr	./mii-tool.c	/^static void watch_one_xcvr(int skfd, char *ifname, int index)$/;"	f	file:
wol_passwd	./ether-wake.c	/^u_char wol_passwd[6];$/;"	v
wol_passwd_sz	./ether-wake.c	/^int wol_passwd_sz = 0;$/;"	v
x25_aftype	./lib/x25.c	/^struct aftype x25_aftype =$/;"	v	typeref:struct:aftype
x25_hwtype	./lib/x25.c	/^struct hwtype x25_hwtype = {$/;"	v	typeref:struct:hwtype
x25_info	./netstat.c	/^static int x25_info(void)$/;"	f	file:
xmalloc	./lib/util.c	/^void *xmalloc(size_t sz)$/;"	f
xrealloc	./lib/util.c	/^void *xrealloc(void *oldp, size_t sz)$/;"	f
xstrdup	./lib/util.c	/^char *xstrdup(char *s)$/;"	f
